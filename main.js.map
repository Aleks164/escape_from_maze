{"version":3,"file":"main.js","mappings":"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","sources":["webpack://maze/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://maze/./src/findExit/insertNextDirectionInMap.ts","webpack://maze/./src/findExit/index.ts","webpack://maze/./src/findExit/calcCrossCoord.ts","webpack://maze/./src/findExit/doStep.ts","webpack://maze/./src/findExit/checkAround.ts","webpack://maze/./src/findExit/getNextStepDirection.ts","webpack://maze/./src/findExit/getItemClass.ts","webpack://maze/./src/findExit/getMazeMarkup.ts","webpack://maze/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://maze/./src/generateMaze/getRandomBorderPosition.ts","webpack://maze/./src/generateMaze/breakNaighborWall.ts","webpack://maze/./src/generateMaze/getEmptyNeighbor.ts","webpack://maze/./src/findExit/getNewMazeParams.ts","webpack://maze/./src/generateMaze/mazeGenerator.ts","webpack://maze/./src/generateMaze/getNextCellCoord.ts","webpack://maze/./src/generateMaze/createMazePatternBySize.ts","webpack://maze/./src/index.ts","webpack://maze/./src/findExit/drawNewMaze.ts","webpack://maze/./src/findExit/getStartPosition.ts","webpack://maze/./src/findExit/getStartParams.ts","webpack://maze/./src/findExit/drawShortWay.ts","webpack://maze/./src/findExit/calcShortWay.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export function insertNextDirectionInMap(\n  string: number,\n  coloumn: number,\n  nextDirection: string,\n  arr: string[]\n) {\n  const newRow = arr[string].split(\"\");\n  newRow[coloumn] = nextDirection;\n  arr[string] = newRow.join(\"\");\n}\n","import { doStep } from \"./doStep\";\nimport { calcCrossCoord } from \"./calcCrossCoord\";\nimport { CoordType, MapType, StepParamType } from \"../types\";\n\n// let startMaze: MapType;\n// let mazeMap: MapType;\n// let startPosition: CoordType;\n// let startDirection: string;\n// let coordList: CoordType[];\n// let currentWay: string[];\n// let listOfCrosses: CoordType[];\n// let crossingsParamArray: CrossesItemType[];\n// let prev: string;\n// let mazeContent: string;\n// let isEscaped: boolean;\n// getStartParams();\n\nexport function makeOneStep(\n  mazeMap: MapType,\n  currentStepParams: StepParamType\n) {\n  let {\n    startPosition,\n    startDirection,\n    coordList,\n    currentWay,\n    listOfCrosses,\n    prev,\n    isEscaped,\n  } = currentStepParams;\n  const { crossingsParamArray } = currentStepParams;\n  if (isEscaped)\n    return {\n      startPosition,\n      startDirection,\n      coordList,\n      currentWay,\n      listOfCrosses,\n      crossingsParamArray,\n      prev,\n      isEscaped,\n    };\n  const { nextStep, nextDirection, resultLOg } = doStep(\n    mazeMap,\n    startDirection,\n    startPosition[0],\n    startPosition[1]\n  );\n  if (\n    startPosition[1] === mazeMap[0].length - 1 ||\n    startPosition[0] === mazeMap.length - 1 ||\n    startPosition[0] === 0 ||\n    startPosition[1] === 0\n  ) {\n    currentWay = currentWay.concat(resultLOg);\n    coordList.push([startPosition[0], startPosition[1]]);\n    crossingsParamArray.push({\n      [startPosition.toString()]: {\n        way: currentWay,\n        from: prev,\n        coord: coordList,\n      },\n    });\n\n    isEscaped = true;\n    return {\n      startPosition,\n      startDirection,\n      coordList,\n      currentWay,\n      listOfCrosses,\n      crossingsParamArray,\n      prev,\n      isEscaped,\n    };\n  }\n  if (nextStep.length > 1 && typeof nextStep !== \"string\") {\n    coordList.push([startPosition[0], startPosition[1]]);\n    const restCrosses = nextStep.splice(1, nextStep.length - 1);\n    listOfCrosses = listOfCrosses.concat(restCrosses);\n    crossingsParamArray.push({\n      [startPosition.toString()]: {\n        way: currentWay,\n        from: prev,\n        coord: coordList,\n      },\n    });\n    currentWay = [];\n    coordList = [];\n    prev = startPosition.toString();\n  }\n  currentWay = currentWay.concat(resultLOg);\n\n  if (nextStep.length) {\n    coordList.push([startPosition[0], startPosition[1]]);\n    startPosition = nextStep[0] as CoordType;\n    startDirection = nextDirection;\n  } else {\n    const crossing = listOfCrosses.shift();\n    coordList = [];\n    if (crossing) {\n      startPosition = crossing;\n      startDirection = mazeMap[crossing[0]][crossing[1]];\n      prev = calcCrossCoord(startDirection, startPosition).toString();\n    }\n    currentWay = [startDirection];\n  }\n  return {\n    startPosition,\n    startDirection,\n    coordList,\n    currentWay,\n    listOfCrosses,\n    crossingsParamArray,\n    prev,\n    isEscaped,\n  };\n}\n","export function calcCrossCoord(direction: string, coord: [number, number]) {\n  let resultCoord: [number, number][] = [];\n  const x = coord[1];\n  const y = coord[0];\n  if (direction === \">\") {\n    resultCoord = resultCoord.concat([y, x - 1]);\n  }\n  if (direction === \"<\") {\n    resultCoord = resultCoord.concat([y, x + 1]);\n  }\n  if (direction === \"^\") {\n    resultCoord = resultCoord.concat([y + 1, x]);\n  }\n  if (direction === \"v\") {\n    resultCoord = resultCoord.concat([y - 1, x]);\n  }\n  return resultCoord;\n}\n","import { checkAround } from \"./checkAround\";\nimport { getNextStepDirection } from \"./getNextStepDirection\";\n\nexport function doStep(\n  arr: string[],\n  curDirecation: string,\n  y: number,\n  x: number\n) {\n  const check = checkAround(y, x, arr);\n  if (!check.length)\n    return {\n      nextStep: [],\n      nextDirection: \"\",\n      resultLOg: [],\n    };\n  const [nextY, nextX] = check[0];\n  const { nextDirection, resultLOg } = getNextStepDirection(\n    [y, x],\n    [nextY, nextX],\n    curDirecation\n  );\n  return {\n    nextStep: check,\n    nextDirection,\n    resultLOg,\n  };\n}\n","import { insertNextDirectionInMap } from \"./insertNextDirectionInMap\";\n\nexport function checkAround(y: number, x: number, arr: string[]) {\n  const emptyWay: [number, number][] = [];\n\n  if (arr[y + 1] && arr[y + 1][x] === \" \") {\n    emptyWay.push([y + 1, x]);\n    insertNextDirectionInMap(y + 1, x, \"v\", arr);\n  }\n  if (arr[y - 1] && arr[y - 1][x] === \" \") {\n    emptyWay.push([y - 1, x]);\n    insertNextDirectionInMap(y - 1, x, \"^\", arr);\n  }\n  if (arr[y][x + 1] === \" \") {\n    emptyWay.push([y, x + 1]);\n    insertNextDirectionInMap(y, x + 1, \">\", arr);\n  }\n  if (arr[y][x - 1] === \" \") {\n    emptyWay.push([y, x - 1]);\n    insertNextDirectionInMap(y, x - 1, \"<\", arr);\n  }\n  return emptyWay;\n}\n","export function getNextStepDirection(\n  curPosition: [number, number],\n  NextPosition: [number, number],\n  curDirection: string\n) {\n  const resultLOg: string[] = [];\n  let nextDirection = \"\";\n  if (curPosition[0] > NextPosition[0]) nextDirection = \"^\"; // top\n  if (curPosition[0] < NextPosition[0]) nextDirection = \"v\"; // bottom\n  if (curPosition[1] > NextPosition[1]) nextDirection = \"<\"; // left\n  if (curPosition[1] < NextPosition[1]) nextDirection = \">\"; // right\n\n  if (curDirection === nextDirection) resultLOg.push(\"F\");\n  else if (curDirection === \">\") {\n    if (nextDirection === \"<\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"^\") resultLOg.push(\"L\", \"F\");\n    if (nextDirection === \"v\") resultLOg.push(\"R\", \"F\");\n  } else if (curDirection === \"<\") {\n    if (nextDirection === \">\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"v\") resultLOg.push(\"L\", \"F\");\n    if (nextDirection === \"^\") resultLOg.push(\"R\", \"F\");\n  } else if (curDirection === \"v\") {\n    if (nextDirection === \"^\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"<\") resultLOg.push(\"R\", \"F\");\n    if (nextDirection === \">\") resultLOg.push(\"L\", \"F\");\n  } else if (curDirection === \"^\") {\n    if (nextDirection === \"v\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \">\") resultLOg.push(\"R\", \"F\");\n    if (nextDirection === \"<\") resultLOg.push(\"L\", \"F\");\n  }\n  return { nextDirection, resultLOg };\n}\n","export function getItemClass(item: string) {\n  switch (item) {\n    case \"#\": {\n      return \"wall\";\n    }\n    case \"*\": {\n      return \"shortWayColor\";\n    }\n    case \">\":\n    case \"<\":\n    case \"v\":\n    case \"^\": {\n      return \"steps\";\n    }\n    case \"horizontal\": {\n      return \"horizontal\";\n    }\n    case \"vertical\": {\n      return \"vertical\";\n    }\n    default:\n      return \"empty\";\n  }\n}\n","import { getItemClass } from \"./getItemClass\";\n\nexport function getMazeMarkup(arr: string[]) {\n  return `<div class=\"mazeRow\"><div class=\"mazeRow\" style=\"grid-template-columns: repeat(${\n    arr[0].length + 1\n  },15px); \">\n  ${Array(arr[0].length)\n    .fill(0)\n    .map((_, columnNumber) => {\n      let emptyCell = \"\";\n      if (columnNumber === 0) emptyCell = \"<div> </div>\";\n      return `${emptyCell}<div  class=${getItemClass(\"vertical\")}>${\n        columnNumber + 1\n      }</div>`;\n    })\n    .join(\"\")}</div>\n  ${arr\n    .map(\n      (row, rowNumber) =>\n        `<div class=\"mazeRow\" style=\"grid-template-columns: repeat(${\n          arr[0].length + 1\n        },15px); \">${row\n          .split(\"\")\n          .map((el, coloumnNumber) => {\n            let numbers = \"\";\n            if (coloumnNumber === 0)\n              numbers = `<div class=${getItemClass(\"horizontal\")}>${\n                rowNumber + 1\n              }</div>`;\n            return `${numbers}<div class=${getItemClass(el)}>${\n              el || \".\"\n            }</div>`;\n          })\n          .join(\"\")}</div>`\n    )\n    .join(\"\")}</div>`;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export function getRandomBorderPosition(heightWithBorder: number) {\n  let position = Math.ceil(Math.random() * heightWithBorder);\n  if (position % 2 === 0) position++;\n  if (position === 0) position++;\n  if (position >= heightWithBorder) position = heightWithBorder - 2;\n  return position;\n}\n","export function brakeNaighborWall(\n  arr: string[][],\n  curCell: [number, number],\n  nextCell: [number, number]\n) {\n  const [y, x] = curCell;\n  if (curCell[0] > nextCell[0] && arr[y - 1]) {\n    arr[y - 1][x] = \" \";\n  }\n  if (curCell[0] < nextCell[0] && arr[y + 1]) {\n    arr[y + 1][x] = \" \";\n  }\n  if (curCell[1] > nextCell[1] && arr[y][x - 1]) {\n    arr[y][x - 1] = \" \";\n  }\n  if (curCell[1] < nextCell[1] && arr[y][x + 1]) {\n    arr[y][x + 1] = \" \";\n  }\n  return arr;\n}\n","export function getEmptyNeighbor(arr: string[][], curCell: [number, number]) {\n  const [y, x] = curCell;\n  const result: [number, number][] = [];\n  if (\n    arr[y + 2] &&\n    arr[y + 2][x] === \" \" &&\n    y + 2 !== arr.length - 1 &&\n    y + 2 !== 0\n  ) {\n    result.push([y + 2, x]);\n  }\n  if (\n    arr[y - 2] &&\n    arr[y - 2][x] === \" \" &&\n    y - 2 !== arr.length - 1 &&\n    y - 2 !== 0\n  ) {\n    result.push([y - 2, x]);\n  }\n  if (\n    arr[y][x + 2] &&\n    arr[y][x + 2] === \" \" &&\n    x + 2 !== arr[y].length - 1 &&\n    x + 2 !== 0\n  ) {\n    result.push([y, x + 2]);\n  }\n  if (\n    arr[y][x - 2] &&\n    arr[y][x - 2] === \" \" &&\n    x - 2 !== arr[y].length - 1 &&\n    x - 2 !== 0\n  ) {\n    result.push([y, x - 2]);\n  }\n  return result;\n}\n","import { createMazePatternBySize } from \"../generateMaze/createMazePatternBySize\";\nimport { mazeGenerator } from \"../generateMaze/mazeGenerator\";\nimport { NewMazeParamType } from \"../types\";\nimport { getMazeMarkup } from \"./getMazeMarkup\";\n\nexport function getNewMazeParams(\n  height: number,\n  wight: number\n): NewMazeParamType {\n  const startMaze = mazeGenerator(createMazePatternBySize(height, wight));\n  return { newMaze: startMaze, mazeMarkup: getMazeMarkup(startMaze) };\n}\n","import { brakeNaighborWall } from \"./breakNaighborWall\";\nimport { getNextCellCoord } from \"./getNextCellCoord\";\nimport { getEmptyNeighbor } from \"./getEmptyNeighbor\";\nimport { getRandomBorderPosition } from \"./getRandomBorderPosition\";\n\nexport function mazeGenerator(arr: string[][]) {\n  const startCell: [number, number] = [1, 1];\n  let curCell = startCell;\n  const cellsWithEmptyNeighborStack = [startCell];\n\n  while (cellsWithEmptyNeighborStack.length) {\n    arr[curCell[0]][curCell[1]] = \"*\";\n    const emptyNeighbors = getEmptyNeighbor(arr, curCell);\n    if (emptyNeighbors.length === 0) {\n      curCell = cellsWithEmptyNeighborStack.shift() as [number, number];\n      // eslint-disable-next-line no-continue\n      continue;\n    } else if (emptyNeighbors.length > 1) {\n      cellsWithEmptyNeighborStack.push(curCell);\n    }\n\n    const nextCell = getNextCellCoord(emptyNeighbors);\n    brakeNaighborWall(arr, curCell, nextCell);\n    curCell = nextCell;\n  }\n  const start = getRandomBorderPosition(arr.length);\n  arr[start][1] = \">\";\n  const resultArr = arr.map((el) => el.join(\"\").replaceAll(\"*\", \" \"));\n  return resultArr;\n}\n","export function getNextCellCoord(variants: [number, number][]) {\n  const variantsLength = variants.length;\n  const rndmVariants = Math.floor(Math.random() * variantsLength);\n  return variants[rndmVariants];\n}\n","import { getRandomBorderPosition } from \"./getRandomBorderPosition\";\n\nexport function createMazePatternBySize(width: number, height: number) {\n  const widthWithBorder = width * 2 + 1;\n  const heightWithBorder = height * 2 + 1;\n  let rowsArray = Array(heightWithBorder).fill(\"\");\n\n  const end = getRandomBorderPosition(heightWithBorder);\n  rowsArray = rowsArray.map((_, i, arr) => {\n    if (i === 0 || i === arr.length - 1 || i % 2 === 0)\n      return Array(widthWithBorder).fill(\"#\");\n\n    return Array(widthWithBorder)\n      .fill(\" \")\n      .map((col, index, arrCol) => {\n        if (i === end && index === widthWithBorder - 1) return \" \";\n        if (index % 2 === 0 || index === 0 || index === arrCol.length - 1)\n          return \"#\";\n        return `${col}`;\n      });\n  });\n  return rowsArray;\n}\n","import { makeOneStep } from \"./findExit\";\nimport { drawNewMaze } from \"./findExit/drawNewMaze\";\nimport { drawShortWay } from \"./findExit/drawShortWay\";\nimport { getMazeMarkup } from \"./findExit/getMazeMarkup\";\nimport { getNewMazeParams } from \"./findExit/getNewMazeParams\";\nimport { getStartParams } from \"./findExit/getStartParams\";\nimport { getStartPosition } from \"./findExit/getStartPosition\";\nimport { StepParamType } from \"./types\";\nimport \"./style.css\";\n\nconst inputHeigth = <HTMLInputElement>document.getElementById(\"heigth\");\nconst inputWidth = <HTMLInputElement>document.getElementById(\"width\");\nconst startButton = <HTMLButtonElement>document.getElementById(\"start\");\nconst generateNewMazeButton = <HTMLButtonElement>(\n  document.getElementById(\"generateNewMaze\")\n);\nconst currenSizeButton = <HTMLDivElement>document.getElementById(\"currenSize\");\nconst mazeContainer = <HTMLDivElement>document.getElementById(\"maze\");\n\nlet height = +inputHeigth.value;\nlet width = +inputWidth.value;\nconst { newMaze, mazeMarkup } = getNewMazeParams(height, width);\nlet mazeMap = window.structuredClone(newMaze);\nif (mazeContainer) mazeContainer.innerHTML = mazeMarkup;\n\ncurrenSizeButton.innerHTML = `height: ${height} x width: ${width}`;\n\ngenerateNewMazeButton.addEventListener(\"click\", () => {\n  height = +inputHeigth.value;\n  width = +inputWidth.value;\n  currenSizeButton.innerHTML = `height: ${height} x width: ${width}`;\n  const mazeParams = getNewMazeParams(height, width);\n  drawNewMaze(mazeContainer, mazeParams.mazeMarkup);\n  mazeMap = window.structuredClone(mazeParams.newMaze);\n  startButton.disabled = false;\n});\n\nstartButton.addEventListener(\"click\", () => {\n  startButton.disabled = true;\n  generateNewMazeButton.disabled = true;\n  const startParam = getStartPosition(mazeMap);\n  const stepParam = getStartParams();\n  const isEscaped = false;\n  let everyStepParam: StepParamType = {\n    ...startParam,\n    ...stepParam,\n    isEscaped,\n  };\n  while (!everyStepParam.isEscaped) {\n    everyStepParam = makeOneStep(mazeMap, everyStepParam);\n    const curStepMazeMarkup = getMazeMarkup(mazeMap);\n    if (mazeContainer) mazeContainer.innerHTML = curStepMazeMarkup;\n  }\n  if (everyStepParam.isEscaped) {\n    const { crossingsParamArray } = everyStepParam;\n    const startMazeMap = window.structuredClone(mazeMap);\n    drawShortWay(crossingsParamArray, mazeContainer, startMazeMap);\n    generateNewMazeButton.disabled = false;\n  }\n});\n","export function drawNewMaze(mazeContainer: HTMLDivElement, mazeParams: string) {\n  if (mazeContainer) mazeContainer.innerHTML = mazeParams;\n}\n","export function getStartPosition(arr: string[]) {\n  let startX = 0;\n  let startY = 0;\n  const startVariants = [\"<\", \"^\", \">\", \"v\"];\n  let startDirection = \"\";\n  for (let y = 0; y < arr.length; y++) {\n    for (let x = 0; x < arr[y].length; x++) {\n      if (startVariants.indexOf(arr[y][x]) >= 0) {\n        startX = x;\n        startY = y;\n        startDirection = arr[y][x];\n        break;\n      }\n      if (startDirection) break;\n    }\n  }\n\n  return {\n    startPosition: [startY, startX] as [number, number],\n    startDirection,\n  };\n}\n","import { StartParamType } from \"../types\";\n\nexport function getStartParams(): StartParamType;\n\nexport function getStartParams() {\n  return {\n    coordList: [],\n    currentWay: [],\n    listOfCrosses: [],\n    crossingsParamArray: [{ start: { way: [], from: null, coord: [] } }],\n    prev: \"start\",\n  } as StartParamType;\n}\n","import { getMazeMarkup } from \"./getMazeMarkup\";\nimport { calcShortWay } from \"./calcShortWay\";\nimport { CrossesItemType, MapType, CoordType } from \"../types\";\n\nexport function drawShortWay(\n  crossingsParamArray: CrossesItemType[],\n  mazeEl: HTMLElement | null,\n  startMaze: MapType\n) {\n  const rightWay = calcShortWay(crossingsParamArray);\n  const trueWayId = setInterval(() => {\n    if (!rightWay.length) {\n      clearInterval(trueWayId);\n      return;\n    }\n    const [y, x] = rightWay.shift() as CoordType;\n    const newRow = startMaze[y].split(\"\");\n    newRow[x] = \"*\";\n    startMaze[y] = newRow.join(\"\");\n    const mazeContent = getMazeMarkup(startMaze);\n    if (mazeEl) mazeEl.innerHTML = mazeContent;\n  }, 25);\n}\n","/* eslint-disable no-loop-func */\n/* eslint-disable prefer-destructuring */\nimport { CrossesItemType } from \"../types\";\n\nexport function calcShortWay(crossesList: CrossesItemType[]) {\n  let lastStep = crossesList.pop() as CrossesItemType;\n  let lastStepKey = Object.keys(lastStep)[0];\n  let prevStepName = lastStep[lastStepKey].from;\n  let prevStepLog = lastStep[lastStepKey].coord;\n  const resultLog = [...prevStepLog];\n  while (prevStepName) {\n    lastStep = crossesList.find((item) => {\n      if (!prevStepName) return false;\n      return item[prevStepName];\n    }) as CrossesItemType;\n    lastStepKey = Object.keys(lastStep)[0];\n    prevStepName = lastStep[lastStepKey].from;\n    prevStepLog = lastStep[lastStepKey].coord;\n    resultLog.unshift(...prevStepLog);\n  }\n  return resultLog;\n}\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","err","TypeError","insertNextDirectionInMap","string","coloumn","nextDirection","newRow","split","join","makeOneStep","mazeMap","currentStepParams","startPosition","startDirection","coordList","currentWay","listOfCrosses","prev","isEscaped","crossingsParamArray","direction","coord","resultCoord","x","y","curDirecation","check","emptyWay","checkAround","nextStep","resultLOg","curPosition","NextPosition","curDirection","doStep","concat","way","restCrosses","splice","crossing","shift","getItemClass","item","getMazeMarkup","fill","map","_","columnNumber","emptyCell","row","rowNumber","el","coloumnNumber","numbers","_toConsumableArray","iter","getRandomBorderPosition","heightWithBorder","position","Math","ceil","random","brakeNaighborWall","curCell","nextCell","getEmptyNeighbor","result","getNewMazeParams","height","wight","startMaze","variants","variantsLength","startCell","cellsWithEmptyNeighborStack","emptyNeighbors","floor","replaceAll","mazeGenerator","width","widthWithBorder","rowsArray","end","col","index","arrCol","createMazePatternBySize","newMaze","mazeMarkup","inputHeigth","document","getElementById","inputWidth","startButton","generateNewMazeButton","currenSizeButton","mazeContainer","window","structuredClone","innerHTML","addEventListener","mazeParams","drawNewMaze","disabled","everyStepParam","startX","startY","startVariants","indexOf","getStartPosition","start","curStepMazeMarkup","startMazeMap","mazeEl","rightWay","crossesList","lastStep","pop","lastStepKey","keys","prevStepName","prevStepLog","resultLog","find","unshift","calcShortWay","trueWayId","setInterval","mazeContent","clearInterval","drawShortWay"],"sourceRoot":""}