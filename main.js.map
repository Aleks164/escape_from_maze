{"version":3,"file":"main.js","mappings":"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","sources":["webpack://maze/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://maze/./src/findExit/checkAround.ts","webpack://maze/./src/findExit/getItemClass.ts","webpack://maze/./src/findExit/getMazeMarkup.ts","webpack://maze/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://maze/./src/findExit/index.ts","webpack://maze/./src/findExit/calcCrossCoord.ts","webpack://maze/./src/findExit/doStep.ts","webpack://maze/./src/findExit/getNextStepDirection.ts","webpack://maze/./src/findExit/drawShortWay.ts","webpack://maze/./src/findExit/calcShortWay.ts","webpack://maze/./src/generateMaze/getRandomBorderPosition.ts","webpack://maze/./src/generateMaze/breakNaighborWall.ts","webpack://maze/./src/generateMaze/getEmptyNeighbor.ts","webpack://maze/./src/findExit/getNewMazeParams.ts","webpack://maze/./src/generateMaze/mazeGenerator.ts","webpack://maze/./src/generateMaze/getNextCellCoord.ts","webpack://maze/./src/generateMaze/createMazePatternBySize.ts","webpack://maze/./src/index.ts","webpack://maze/./src/findExit/drawNewMaze.ts","webpack://maze/./node_modules/@babel/runtime/helpers/esm/readOnlyError.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export function checkAround(y: number, x: number, arr: string[]) {\n  const emptyWay: [number, number][] = [];\n\n  if (arr[y + 1] && arr[y + 1][x] === \" \") {\n    emptyWay.push([y + 1, x]);\n    splitter(y + 1, x, \"v\", arr);\n  }\n  if (arr[y - 1] && arr[y - 1][x] === \" \") {\n    emptyWay.push([y - 1, x]);\n    splitter(y - 1, x, \"^\", arr);\n  }\n  if (arr[y][x + 1] === \" \") {\n    emptyWay.push([y, x + 1]);\n    splitter(y, x + 1, \">\", arr);\n  }\n  if (arr[y][x - 1] === \" \") {\n    emptyWay.push([y, x - 1]);\n    splitter(y, x - 1, \"<\", arr);\n  }\n  return emptyWay;\n}\n\nfunction splitter(\n  string: number,\n  coloumn: number,\n  nextDirection: string,\n  arr: string[]\n) {\n  const newRow = arr[string].split(\"\");\n  newRow[coloumn] = nextDirection;\n  arr[string] = newRow.join(\"\");\n}\n","export function getItemClass(item: string) {\n  switch (item) {\n    case \"#\": {\n      return \"wall\";\n    }\n    case \"*\": {\n      return \"shortWayColor\";\n    }\n    case \">\":\n    case \"<\":\n    case \"v\":\n    case \"^\": {\n      return \"steps\";\n    }\n    case \"horizontal\": {\n      return \"horizontal\";\n    }\n    case \"vertical\": {\n      return \"vertical\";\n    }\n    default:\n      return \"empty\";\n  }\n}\n","import { getItemClass } from \"./getItemClass\";\n\nexport function getMazeMarkup(arr: string[]) {\n  return `<div class=\"mazeRow\"><div class=\"mazeRow\" style=\"grid-template-columns: repeat(${\n    arr[0].length + 1\n  },15px); \">\n  ${Array(arr[0].length)\n    .fill(0)\n    .map((_, columnNumber) => {\n      let emptyCell = \"\";\n      if (columnNumber === 0) emptyCell = \"<div> </div>\";\n      return `${emptyCell}<div  class=${getItemClass(\"vertical\")}>${\n        columnNumber + 1\n      }</div>`;\n    })\n    .join(\"\")}</div>\n  ${arr\n    .map(\n      (row, rowNumber) =>\n        `<div class=\"mazeRow\" style=\"grid-template-columns: repeat(${\n          arr[0].length + 1\n        },15px); \">${row\n          .split(\"\")\n          .map((el, coloumnNumber) => {\n            let numbers = \"\";\n            if (coloumnNumber === 0)\n              numbers = `<div class=${getItemClass(\"horizontal\")}>${\n                rowNumber + 1\n              }</div>`;\n            return `${numbers}<div class=${getItemClass(el)}>${\n              el || \".\"\n            }</div>`;\n          })\n          .join(\"\")}</div>`\n    )\n    .join(\"\")}</div>`;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { doStep } from \"./doStep\";\nimport { getMazeMarkup } from \"./getMazeMarkup\";\nimport { calcCrossCoord } from \"./calcCrossCoord\";\nimport { drawShortWay } from \"./drawShortWay\";\nimport { CoordType, CrossesItemType, MapType } from \"../types\";\nimport { getStartParams } from \"./getStartParams\";\n\nlet startMaze: MapType;\nlet mazeMap: MapType;\n// let startPosition: CoordType;\n// let startDirection: string;\n// let coordList: CoordType[];\n// let currentWay: string[];\n// let listOfCrosses: CoordType[];\n// let crossingsParamArray: CrossesItemType[];\n// let prev: string;\nlet mazeContent: string;\nlet isEscaped: boolean;\ngetStartParams();\n\nexport function makeOneStep() {\n  const startParam = getStartPosition(mazeMap);\n  startPosition = startParam.startPosition;\n  startDirection = startParam.startDirection;\n  if (isEscaped) return;\n  const { nextStep, nextDirection, resultLOg } = doStep(\n    mazeMap,\n    startDirection,\n    startPosition[0],\n    startPosition[1]\n  );\n  console.log(\n    nextStep[0],\n    nextStep[1],\n    coordList,\n    startPosition[0],\n    startPosition[1]\n  );\n  if (\n    startPosition[1] === mazeMap[0].length - 1 ||\n    startPosition[0] === mazeMap.length - 1 ||\n    startPosition[0] === 0 ||\n    startPosition[1] === 0\n  ) {\n    currentWay = currentWay.concat(resultLOg);\n    coordList.push([startPosition[0], startPosition[1]]);\n    crossingsParamArray.push({\n      [startPosition.toString()]: {\n        way: currentWay,\n        from: prev,\n        coord: coordList,\n      },\n    });\n    drawShortWay(resultLOg);\n    isEscaped = true;\n    return;\n  }\n  if (nextStep.length > 1 && typeof nextStep !== \"string\") {\n    coordList.push([startPosition[0], startPosition[1]]);\n    const restCrosses = nextStep.splice(1, nextStep.length - 1);\n    listOfCrosses = listOfCrosses.concat(restCrosses);\n    crossingsParamArray.push({\n      [startPosition.toString()]: {\n        way: currentWay,\n        from: prev,\n        coord: coordList,\n      },\n    });\n    currentWay = [];\n    coordList = [];\n    prev = startPosition.toString();\n  }\n  currentWay = currentWay.concat(resultLOg);\n\n  if (nextStep.length) {\n    coordList.push([startPosition[0], startPosition[1]]);\n    startPosition = nextStep[0] as CoordType;\n    startDirection = nextDirection;\n  } else {\n    const crossing = listOfCrosses.shift();\n    coordList = [];\n    if (crossing) {\n      startPosition = crossing;\n      startDirection = mazeMap[crossing[0]][crossing[1]];\n      prev = calcCrossCoord(startDirection, startPosition).toString();\n    }\n    currentWay = [startDirection];\n  }\n  mazeContent = getMazeMarkup(mazeMap);\n  if (mazeEl) mazeEl.innerHTML = mazeContent;\n}\n","export function calcCrossCoord(direction: string, coord: [number, number]) {\n  let resultCoord: [number, number][] = [];\n  const x = coord[1];\n  const y = coord[0];\n  if (direction === \">\") {\n    resultCoord = resultCoord.concat([y, x - 1]);\n  }\n  if (direction === \"<\") {\n    resultCoord = resultCoord.concat([y, x + 1]);\n  }\n  if (direction === \"^\") {\n    resultCoord = resultCoord.concat([y + 1, x]);\n  }\n  if (direction === \"v\") {\n    resultCoord = resultCoord.concat([y - 1, x]);\n  }\n  return resultCoord;\n}\n","import { checkAround } from \"./checkAround\";\nimport { getNextStepDirection } from \"./getNextStepDirection\";\n\nexport function doStep(\n  arr: string[],\n  curDirecation: string,\n  y: number,\n  x: number\n) {\n  const check = checkAround(y, x, arr);\n  if (!check.length)\n    return {\n      nextStep: [],\n      nextDirection: \"\",\n      resultLOg: [],\n    };\n  const [nextY, nextX] = check[0];\n  const { nextDirection, resultLOg } = getNextStepDirection(\n    [y, x],\n    [nextY, nextX],\n    curDirecation\n  );\n  return {\n    nextStep: check,\n    nextDirection,\n    resultLOg,\n  };\n}\n","export function getNextStepDirection(\n  curPosition: [number, number],\n  NextPosition: [number, number],\n  curDirection: string\n) {\n  const resultLOg: string[] = [];\n  let nextDirection = \"\";\n  if (curPosition[0] > NextPosition[0]) nextDirection = \"^\"; // top\n  if (curPosition[0] < NextPosition[0]) nextDirection = \"v\"; // bottom\n  if (curPosition[1] > NextPosition[1]) nextDirection = \"<\"; // left\n  if (curPosition[1] < NextPosition[1]) nextDirection = \">\"; // right\n\n  if (curDirection === nextDirection) resultLOg.push(\"F\");\n  else if (curDirection === \">\") {\n    if (nextDirection === \"<\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"^\") resultLOg.push(\"L\", \"F\");\n    if (nextDirection === \"v\") resultLOg.push(\"R\", \"F\");\n  } else if (curDirection === \"<\") {\n    if (nextDirection === \">\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"v\") resultLOg.push(\"L\", \"F\");\n    if (nextDirection === \"^\") resultLOg.push(\"R\", \"F\");\n  } else if (curDirection === \"v\") {\n    if (nextDirection === \"^\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"<\") resultLOg.push(\"R\", \"F\");\n    if (nextDirection === \">\") resultLOg.push(\"L\", \"F\");\n  } else if (curDirection === \"^\") {\n    if (nextDirection === \"v\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \">\") resultLOg.push(\"R\", \"F\");\n    if (nextDirection === \"<\") resultLOg.push(\"L\", \"F\");\n  }\n  return { nextDirection, resultLOg };\n}\n","import { getMazeMarkup } from \"./getMazeMarkup\";\nimport { calcShortWay } from \"./calcShortWay\";\nimport { CrossesItemType, MapType, CoordType } from \"../types\";\n\nexport function drawShortWay(\n  crossingsParamArray: CrossesItemType[],\n  mazeEl: HTMLElement | null,\n  startMaze: MapType\n) {\n  const rightWay = calcShortWay(crossingsParamArray);\n  const trueWayId = setInterval(() => {\n    console.log(trueWayId);\n\n    if (!rightWay.length) {\n      clearInterval(trueWayId);\n      return;\n    }\n    const [y, x] = rightWay.shift() as CoordType;\n    const newRow = startMaze[y].split(\"\");\n    newRow[x] = \"*\";\n    startMaze[y] = newRow.join(\"\");\n    const mazeContent = getMazeMarkup(startMaze);\n    if (mazeEl) mazeEl.innerHTML = mazeContent;\n  }, 25);\n}\n","/* eslint-disable no-loop-func */\n/* eslint-disable prefer-destructuring */\nimport { CrossesItemType } from \"./index\";\n\nexport function calcShortWay(crossesList: CrossesItemType[]) {\n  let lastStep = crossesList.pop() as CrossesItemType;\n  let lastStepKey = Object.keys(lastStep)[0];\n  let prevStepName = lastStep[lastStepKey].from;\n  let prevStepLog = lastStep[lastStepKey].coord;\n  const resultLog = [...prevStepLog];\n  while (prevStepName) {\n    lastStep = crossesList.find(\n      (item) => item[prevStepName!]\n    ) as CrossesItemType;\n    lastStepKey = Object.keys(lastStep)[0];\n    prevStepName = lastStep[lastStepKey].from;\n    prevStepLog = lastStep[lastStepKey].coord;\n    resultLog.unshift(...prevStepLog);\n  }\n  return resultLog;\n}\n","export function getRandomBorderPosition(heightWithBorder: number) {\n  let position = Math.ceil(Math.random() * heightWithBorder);\n  if (position % 2 === 0) position++;\n  if (position === 0) position++;\n  if (position >= heightWithBorder) position = heightWithBorder - 2;\n  return position;\n}\n","export function brakeNaighborWall(\n  arr: string[][],\n  curCell: [number, number],\n  nextCell: [number, number]\n) {\n  const [y, x] = curCell;\n  if (curCell[0] > nextCell[0] && arr[y - 1]) {\n    arr[y - 1][x] = \" \";\n  }\n  if (curCell[0] < nextCell[0] && arr[y + 1]) {\n    arr[y + 1][x] = \" \";\n  }\n  if (curCell[1] > nextCell[1] && arr[y][x - 1]) {\n    arr[y][x - 1] = \" \";\n  }\n  if (curCell[1] < nextCell[1] && arr[y][x + 1]) {\n    arr[y][x + 1] = \" \";\n  }\n  return arr;\n}\n","export function getEmptyNeighbor(arr: string[][], curCell: [number, number]) {\n  const [y, x] = curCell;\n  const result: [number, number][] = [];\n  if (\n    arr[y + 2] &&\n    arr[y + 2][x] === \" \" &&\n    y + 2 !== arr.length - 1 &&\n    y + 2 !== 0\n  ) {\n    result.push([y + 2, x]);\n  }\n  if (\n    arr[y - 2] &&\n    arr[y - 2][x] === \" \" &&\n    y - 2 !== arr.length - 1 &&\n    y - 2 !== 0\n  ) {\n    result.push([y - 2, x]);\n  }\n  if (\n    arr[y][x + 2] &&\n    arr[y][x + 2] === \" \" &&\n    x + 2 !== arr[y].length - 1 &&\n    x + 2 !== 0\n  ) {\n    result.push([y, x + 2]);\n  }\n  if (\n    arr[y][x - 2] &&\n    arr[y][x - 2] === \" \" &&\n    x - 2 !== arr[y].length - 1 &&\n    x - 2 !== 0\n  ) {\n    result.push([y, x - 2]);\n  }\n  return result;\n}\n","import { createMazePatternBySize } from \"../generateMaze/createMazePatternBySize\";\nimport { mazeGenerator } from \"../generateMaze/mazeGenerator\";\nimport { NewMazeParamType } from \"../types\";\nimport { getMazeMarkup } from \"./getMazeMarkup\";\n\nexport function getNewMazeParams(\n  height: number,\n  wight: number\n): NewMazeParamType {\n  const startMaze = mazeGenerator(createMazePatternBySize(height, wight));\n  return { newMaze: startMaze, mazeMarkup: getMazeMarkup(startMaze) };\n}\n","import { brakeNaighborWall } from \"./breakNaighborWall\";\nimport { getNextCellCoord } from \"./getNextCellCoord\";\nimport { getEmptyNeighbor } from \"./getEmptyNeighbor\";\nimport { getRandomBorderPosition } from \"./getRandomBorderPosition\";\n\nexport function mazeGenerator(arr: string[][]) {\n  const startCell: [number, number] = [1, 1];\n  let curCell = startCell;\n  const cellsWithEmptyNeighborStack = [startCell];\n\n  while (cellsWithEmptyNeighborStack.length) {\n    arr[curCell[0]][curCell[1]] = \"*\";\n    const emptyNeighbors = getEmptyNeighbor(arr, curCell);\n    if (emptyNeighbors.length === 0) {\n      curCell = cellsWithEmptyNeighborStack.shift() as [number, number];\n      // eslint-disable-next-line no-continue\n      continue;\n    } else if (emptyNeighbors.length > 1) {\n      cellsWithEmptyNeighborStack.push(curCell);\n    }\n\n    const nextCell = getNextCellCoord(emptyNeighbors);\n    brakeNaighborWall(arr, curCell, nextCell);\n    curCell = nextCell;\n  }\n  const start = getRandomBorderPosition(arr.length);\n  arr[start][1] = \">\";\n  const resultArr = arr.map((el) => el.join(\"\").replaceAll(\"*\", \" \"));\n  return resultArr;\n}\n","export function getNextCellCoord(variants: [number, number][]) {\n  const variantsLength = variants.length;\n  const rndmVariants = Math.floor(Math.random() * variantsLength);\n  return variants[rndmVariants];\n}\n","import { getRandomBorderPosition } from \"./getRandomBorderPosition\";\n\nexport function createMazePatternBySize(width: number, height: number) {\n  const widthWithBorder = width * 2 + 1;\n  const heightWithBorder = height * 2 + 1;\n  let rowsArray = Array(heightWithBorder).fill(\"\");\n\n  const end = getRandomBorderPosition(heightWithBorder);\n  rowsArray = rowsArray.map((_, i, arr) => {\n    if (i === 0 || i === arr.length - 1 || i % 2 === 0)\n      return Array(widthWithBorder).fill(\"#\");\n\n    return Array(widthWithBorder)\n      .fill(\" \")\n      .map((col, index, arrCol) => {\n        if (i === end && index === widthWithBorder - 1) return \" \";\n        if (index % 2 === 0 || index === 0 || index === arrCol.length - 1)\n          return \"#\";\n        return `${col}`;\n      });\n  });\n  return rowsArray;\n}\n","import { makeOneStep } from \"./findExit\";\nimport { drawNewMaze } from \"./findExit/drawNewMaze\";\nimport { getNewMazeParams } from \"./findExit/getNewMazeParams\";\nimport { createMazePatternBySize } from \"./generateMaze/createMazePatternBySize\";\nimport { mazeGenerator } from \"./generateMaze/mazeGenerator\";\nimport \"./style.css\";\n\nconst inputHeigth = <HTMLInputElement>document.getElementById(\"heigth\");\nconst inputWidth = <HTMLInputElement>document.getElementById(\"width\");\nconst nextStepButton = <HTMLButtonElement>(\n  document.getElementById(\"nextStepButton\")\n);\nconst generateNewMazeButton = <HTMLButtonElement>(\n  document.getElementById(\"generateNewMaze\")\n);\nconst currenSizeButton = <HTMLDivElement>document.getElementById(\"currenSize\");\nconst mazeContainer = <HTMLDivElement>document.getElementById(\"maze\");\n\nconst height = +inputHeigth.value;\nconst width = +inputWidth.value;\nconst { newMaze, mazeMarkup } = getNewMazeParams(height, width);\nif (mazeContainer) mazeContainer.innerHTML = mazeMarkup;\n\ncurrenSizeButton.innerHTML = `height: ${height} x width: ${width}`;\n\ngenerateNewMazeButton.addEventListener(\"click\", () => {\n  const mazeParams = getNewMazeParams(height, width);\n  drawNewMaze(mazeContainer, mazeParams.mazeMarkup);\n  newMaze = mazeParams.newMaze;\n});\n\nnextStepButton.addEventListener(\"click\", () => {\n  nextStepButton.disabled = true;\n  let isEscaped = false;\n  while (!isEscaped) {\n    isEscaped = makeOneStep(newMaze);\n  }\n  nextStepButton.disabled = false;\n});\n","export function drawNewMaze(mazeContainer: HTMLDivElement, mazeParams: string) {\n  if (mazeContainer) mazeContainer.innerHTML = mazeParams;\n}\n","export default function _readOnlyError(name) {\n  throw new TypeError(\"\\\"\" + name + \"\\\" is read-only\");\n}"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","err","TypeError","splitter","string","coloumn","nextDirection","newRow","split","join","getItemClass","item","getMazeMarkup","fill","map","_","columnNumber","emptyCell","row","rowNumber","el","coloumnNumber","numbers","_toConsumableArray","iter","mazeMap","mazeContent","isEscaped","makeOneStep","startParam","getStartPosition","startPosition","startDirection","direction","coord","resultCoord","x","y","curDirecation","check","emptyWay","checkAround","nextStep","resultLOg","curPosition","NextPosition","curDirection","doStep","console","log","coordList","currentWay","concat","crossingsParamArray","way","prev","mazeEl","startMaze","rightWay","crossesList","lastStep","pop","lastStepKey","keys","prevStepName","prevStepLog","resultLog","find","unshift","calcShortWay","trueWayId","setInterval","shift","innerHTML","clearInterval","drawShortWay","restCrosses","splice","listOfCrosses","crossing","getRandomBorderPosition","heightWithBorder","position","Math","ceil","random","brakeNaighborWall","curCell","nextCell","getEmptyNeighbor","result","getNewMazeParams","height","wight","variants","variantsLength","startCell","cellsWithEmptyNeighborStack","emptyNeighbors","floor","replaceAll","mazeGenerator","width","widthWithBorder","rowsArray","end","col","index","arrCol","createMazePatternBySize","newMaze","mazeMarkup","inputHeigth","document","getElementById","inputWidth","nextStepButton","generateNewMazeButton","currenSizeButton","mazeContainer","addEventListener","mazeParams","drawNewMaze","disabled"],"sourceRoot":""}