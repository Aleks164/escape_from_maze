{"version":3,"file":"main.js","mappings":"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","sources":["webpack://maze/./src/app/constants.ts","webpack://maze/webpack/bootstrap","webpack://maze/webpack/runtime/define property getters","webpack://maze/webpack/runtime/get javascript chunk filename","webpack://maze/webpack/runtime/hasOwnProperty shorthand","webpack://maze/webpack/runtime/publicPath","webpack://maze/./src/app/drawNewMaze.ts","webpack://maze/./src/app/getMazeParams.ts","webpack://maze/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://maze/./src/app/findExit/insertNextDirectionInMap.ts","webpack://maze/./src/app/findExit/index.ts","webpack://maze/./src/app/findExit/calcCrossCoord.ts","webpack://maze/./src/app/findExit/doStep.ts","webpack://maze/./src/app/findExit/checkAround.ts","webpack://maze/./src/app/findExit/getNextStepDirection.ts","webpack://maze/./src/app/findExit/getItemClass.ts","webpack://maze/./src/app/findExit/getMazeMarkup.ts","webpack://maze/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://maze/webpack/runtime/jsonp chunk loading","webpack://maze/./src/index.ts","webpack://maze/./src/app/getSkeletonMaze.ts","webpack://maze/./src/app/drawSkeleton.ts","webpack://maze/./src/app/drawMazeParams.ts","webpack://maze/./src/app/startEscaping.ts","webpack://maze/./src/app/findExit/getStartPosition.ts","webpack://maze/./src/app/findExit/getStartParams.ts","webpack://maze/./src/app/findExit/drawShortWay.ts","webpack://maze/./src/app/findExit/calcShortWay.ts"],"sourcesContent":["export enum MESSAGE_TYPES {\n  DRAW_ESCAPING = \"drawEscaping\",\n  DRAW_NEW_MAZE = \"drawNewMaze\",\n}\n","// The require scope\nvar __webpack_require__ = {};\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/task-calendar/\";","export function drawNewMaze(mazeContainer: HTMLDivElement, mazeMarkup: string) {\n  if (mazeContainer) mazeContainer.innerHTML = mazeMarkup;\n}\n","export function getMazeParams() {\n  const inputHeigth = <HTMLInputElement>document.getElementById(\"heigth\");\n  const inputWidth = <HTMLInputElement>document.getElementById(\"width\");\n\n  const height = +inputHeigth.value;\n  const width = +inputWidth.value;\n  return { height, width };\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export function insertNextDirectionInMap(\n  string: number,\n  coloumn: number,\n  nextDirection: string,\n  arr: string[]\n) {\n  const newRow = arr[string].split(\"\");\n  newRow[coloumn] = nextDirection;\n  arr[string] = newRow.join(\"\");\n}\n","import { doStep } from \"./doStep\";\nimport { calcCrossCoord } from \"./calcCrossCoord\";\nimport { DirectionType, MapType, StepParamType } from \"../../types\";\n\nexport function makeOneStep(\n  mazeMap: MapType,\n  currentStepParams: StepParamType\n) {\n  let {\n    startPosition,\n    startDirection,\n    coordList,\n    currentWay,\n    listOfCrosses,\n    prev,\n    isEscaped,\n  } = currentStepParams;\n  const { crossingsParamArray } = currentStepParams;\n  if (isEscaped) return currentStepParams;\n  const { nextStep, nextDirection, resultLOg } = doStep(\n    mazeMap,\n    startDirection,\n    startPosition[0],\n    startPosition[1]\n  );\n  if (\n    startPosition[1] === mazeMap[0].length - 1 ||\n    startPosition[0] === mazeMap.length - 1 ||\n    startPosition[0] === 0 ||\n    startPosition[1] === 0\n  ) {\n    currentWay = currentWay.concat(resultLOg);\n    coordList.push([startPosition[0], startPosition[1]]);\n    crossingsParamArray.push({\n      [startPosition.toString()]: {\n        way: currentWay,\n        from: prev,\n        coord: coordList,\n      },\n    });\n    isEscaped = true;\n    return {\n      ...currentStepParams,\n      coordList,\n      currentWay,\n      crossingsParamArray,\n      isEscaped,\n    };\n  }\n  if (nextStep.length > 1 && typeof nextStep !== \"string\") {\n    coordList.push([startPosition[0], startPosition[1]]);\n    const restCrosses = nextStep.splice(1, nextStep.length - 1);\n    listOfCrosses = listOfCrosses.concat(restCrosses);\n    crossingsParamArray.push({\n      [startPosition.toString()]: {\n        way: currentWay,\n        from: prev,\n        coord: coordList,\n      },\n    });\n    currentWay = [];\n    coordList = [];\n    prev = startPosition.toString();\n  }\n  currentWay = currentWay.concat(resultLOg);\n\n  if (nextStep.length) {\n    coordList.push([startPosition[0], startPosition[1]]);\n    [startPosition] = nextStep;\n    startDirection = nextDirection;\n  } else {\n    const crossing = listOfCrosses.shift();\n    coordList = [];\n    if (crossing) {\n      startPosition = crossing;\n      startDirection = mazeMap[crossing[0]][crossing[1]] as DirectionType;\n      prev = calcCrossCoord(startDirection, startPosition).toString();\n    }\n    currentWay = [startDirection];\n  }\n  return {\n    startPosition,\n    startDirection,\n    coordList,\n    currentWay,\n    listOfCrosses,\n    crossingsParamArray,\n    prev,\n    isEscaped,\n  };\n}\n","import { CoordType, DirectionType } from \"../../types\";\n\nexport function calcCrossCoord(direction: DirectionType, coord: CoordType) {\n  let resultCoord: CoordType[] = [];\n  const x = coord[1];\n  const y = coord[0];\n  if (direction === \">\") {\n    resultCoord = resultCoord.concat([y, x - 1]);\n  }\n  if (direction === \"<\") {\n    resultCoord = resultCoord.concat([y, x + 1]);\n  }\n  if (direction === \"^\") {\n    resultCoord = resultCoord.concat([y + 1, x]);\n  }\n  if (direction === \"v\") {\n    resultCoord = resultCoord.concat([y - 1, x]);\n  }\n  return resultCoord;\n}\n","import { DirectionType, MapType } from \"../../types\";\nimport { checkAround } from \"./checkAround\";\nimport { getNextStepDirection } from \"./getNextStepDirection\";\n\nexport function doStep(\n  mazeMap: MapType,\n  curDirecation: DirectionType,\n  y: number,\n  x: number\n) {\n  const check = checkAround(y, x, mazeMap);\n  if (!check.length)\n    return {\n      nextStep: [],\n      nextDirection: \"\" as DirectionType,\n      resultLOg: [],\n    };\n  const [nextY, nextX] = check[0];\n  const { nextDirection, resultLOg } = getNextStepDirection(\n    [y, x],\n    [nextY, nextX],\n    curDirecation\n  );\n  return {\n    nextStep: check,\n    nextDirection,\n    resultLOg,\n  };\n}\n","import { CoordType, MapType } from \"../../types\";\nimport { insertNextDirectionInMap } from \"./insertNextDirectionInMap\";\n\nexport function checkAround(y: number, x: number, mazeMap: MapType) {\n  const emptyWay: CoordType[] = [];\n\n  if (mazeMap[y + 1] && mazeMap[y + 1][x] === \" \") {\n    emptyWay.push([y + 1, x]);\n    insertNextDirectionInMap(y + 1, x, \"v\", mazeMap);\n  }\n  if (mazeMap[y - 1] && mazeMap[y - 1][x] === \" \") {\n    emptyWay.push([y - 1, x]);\n    insertNextDirectionInMap(y - 1, x, \"^\", mazeMap);\n  }\n  if (mazeMap[y][x + 1] === \" \") {\n    emptyWay.push([y, x + 1]);\n    insertNextDirectionInMap(y, x + 1, \">\", mazeMap);\n  }\n  if (mazeMap[y][x - 1] === \" \") {\n    emptyWay.push([y, x - 1]);\n    insertNextDirectionInMap(y, x - 1, \"<\", mazeMap);\n  }\n  return emptyWay;\n}\n","import { CoordType, DirectionType } from \"../../types\";\n\nexport function getNextStepDirection(\n  curPosition: CoordType,\n  NextPosition: CoordType,\n  curDirection: DirectionType\n) {\n  const resultLOg: string[] = [];\n  let nextDirection: DirectionType = \">\";\n  if (curPosition[0] > NextPosition[0]) nextDirection = \"^\"; // top\n  if (curPosition[0] < NextPosition[0]) nextDirection = \"v\"; // bottom\n  if (curPosition[1] > NextPosition[1]) nextDirection = \"<\"; // left\n  if (curPosition[1] < NextPosition[1]) nextDirection = \">\"; // right\n\n  if (curDirection === nextDirection) resultLOg.push(\"F\");\n  else if (curDirection === \">\") {\n    if (nextDirection === \"<\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"^\") resultLOg.push(\"L\", \"F\");\n    if (nextDirection === \"v\") resultLOg.push(\"R\", \"F\");\n  } else if (curDirection === \"<\") {\n    if (nextDirection === \">\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"v\") resultLOg.push(\"L\", \"F\");\n    if (nextDirection === \"^\") resultLOg.push(\"R\", \"F\");\n  } else if (curDirection === \"v\") {\n    if (nextDirection === \"^\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"<\") resultLOg.push(\"R\", \"F\");\n    if (nextDirection === \">\") resultLOg.push(\"L\", \"F\");\n  } else if (curDirection === \"^\") {\n    if (nextDirection === \"v\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \">\") resultLOg.push(\"R\", \"F\");\n    if (nextDirection === \"<\") resultLOg.push(\"L\", \"F\");\n  }\n  return { nextDirection, resultLOg };\n}\n","export function getItemClass(item: string) {\n  switch (item) {\n    case \"#\": {\n      return \"wall\";\n    }\n    case \"*\": {\n      return \"shortWayColor\";\n    }\n    case \">\":\n    case \"<\":\n    case \"v\":\n    case \"^\": {\n      return \"steps\";\n    }\n    case \"horizontal\": {\n      return \"horizontal\";\n    }\n    case \"vertical\": {\n      return \"vertical\";\n    }\n    default:\n      return \"empty\";\n  }\n}\n","import { getItemClass } from \"./getItemClass\";\n\nexport function getMazeMarkup(arr: string[]) {\n  return `<div class=\"mazeRow\"><div class=\"mazeRow\" style=\"grid-template-columns: repeat(${\n    arr[0].length + 1\n  },15px); \">\n  ${Array(arr[0].length)\n    .fill(0)\n    .map((_, columnNumber) => {\n      let emptyCell = \"\";\n      if (columnNumber === 0) emptyCell = \"<div> </div>\";\n      return `${emptyCell}<div  class=${getItemClass(\"vertical\")}>${\n        columnNumber + 1\n      }</div>`;\n    })\n    .join(\"\")}</div>\n  ${arr\n    .map(\n      (row, rowNumber) =>\n        `<div class=\"mazeRow\" style=\"grid-template-columns: repeat(${\n          arr[0].length + 1\n        },15px); \">${row\n          .split(\"\")\n          .map((el, coloumnNumber) => {\n            let numbers = \"\";\n            if (coloumnNumber === 0)\n              numbers = `<div class=${getItemClass(\"horizontal\")}>${\n                rowNumber + 1\n              }</div>`;\n            return `${numbers}<div class=${getItemClass(el)}>${\n              el || \".\"\n            }</div>`;\n          })\n          .join(\"\")}</div>`\n    )\n    .join(\"\")}</div>`;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","import { drawNewMaze } from \"./app/drawNewMaze\";\nimport { getMazeParams } from \"./app/getMazeParams\";\nimport { startEscaping } from \"./app/startEscaping\";\nimport { drawSkeleton } from \"./app/drawSkeleton\";\nimport { drawMazeParams } from \"./app/drawMazeParams\";\nimport { MESSAGE_TYPES } from \"./app/constants\";\nimport \"./style.css\";\n\nconst startButton = <HTMLButtonElement>document.getElementById(\"start\");\nconst generateNewMazeButton = <HTMLButtonElement>(\n  document.getElementById(\"generateNewMaze\")\n);\nexport const mazeContainer = <HTMLDivElement>document.getElementById(\"maze\");\n\nconst worker = new Worker(new URL(\"./mazeGeneratorWW.ts\", import.meta.url));\n\nworker.onmessage = ({ data: { newMaze, mazeMarkup, type } }) => {\n  console.log(newMaze, mazeMarkup, type);\n\n  switch (type) {\n    case MESSAGE_TYPES.DRAW_NEW_MAZE: {\n      const { height, width } = getMazeParams();\n      drawMazeParams(height, width);\n      drawNewMaze(mazeContainer, mazeMarkup);\n      startButton.disabled = false;\n      break;\n    }\n    case MESSAGE_TYPES.DRAW_ESCAPING: {\n      // startButton.disabled = true;\n      // generateNewMazeButton.disabled = true;\n      startEscaping(newMaze, mazeContainer, generateNewMazeButton);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n};\n\ndrawSkeleton();\n\nworker.postMessage({\n  mazeParams: getMazeParams(),\n  type: MESSAGE_TYPES.DRAW_NEW_MAZE,\n});\n\ngenerateNewMazeButton.addEventListener(\"click\", () => {\n  worker.postMessage({\n    mazeParams: getMazeParams(),\n    type: MESSAGE_TYPES.DRAW_NEW_MAZE,\n  });\n  // drawNewMaze(mazeContainer, mazeMarkup);\n  // startButton.disabled = false;\n});\n\nstartButton.addEventListener(\"click\", () => {\n  startButton.disabled = true;\n  generateNewMazeButton.disabled = true;\n  // startEscaping(newMaze, mazeContainer, generateNewMazeButton);\n  worker.postMessage({ type: MESSAGE_TYPES.DRAW_ESCAPING });\n});\n","export function getSkeletonMaze(width: number, height: number) {\n  const widthWithBorder = width * 2 + 1;\n  const heightWithBorder = height * 2 + 1;\n  return Array(heightWithBorder)\n    .fill(\"\")\n    .map((row, rowIndex) =>\n      Array(widthWithBorder)\n        .fill(\" \")\n        .map((item, itemIndex) => {\n          if (\n            (itemIndex % 2 !== 0 && rowIndex % 2 !== 0) ||\n            (itemIndex % 2 === 0 && rowIndex % 2 === 0)\n          )\n            return \"#\";\n          return \" \";\n        })\n        .join(\"\")\n    );\n}\n","import { drawNewMaze } from \"./drawNewMaze\";\nimport { getMazeMarkup } from \"./findExit/getMazeMarkup\";\nimport { getMazeParams } from \"./getMazeParams\";\nimport { getSkeletonMaze } from \"./getSkeletonMaze\";\nimport { mazeContainer } from \"..\";\n\n// worker.postMessage({ mazeParams: getMazeParams(), type: \"drawNewMaze\" });\nexport function drawSkeleton() {\n  const { height, width } = getMazeParams();\n\n  const skeletonMaze = getSkeletonMaze(height, width);\n\n  drawNewMaze(mazeContainer, getMazeMarkup(skeletonMaze));\n}\n","export function drawMazeParams(height: number, width: number) {\n  const currenSizeButton = <HTMLDivElement>(\n    document.getElementById(\"currenSize\")\n  );\n\n  currenSizeButton.innerHTML = `height: ${height} x width: ${width}`;\n}\n","import { makeOneStep } from \"./findExit\";\nimport { drawShortWay } from \"./findExit/drawShortWay\";\nimport { getMazeMarkup } from \"./findExit/getMazeMarkup\";\nimport { getStartParams } from \"./findExit/getStartParams\";\nimport { getStartPosition } from \"./findExit/getStartPosition\";\nimport { MapType, StepParamType } from \"../types\";\n\nexport function startEscaping(\n  mazeMap: MapType,\n  mazeContainer: HTMLDivElement,\n  generateNewMazeButton: HTMLButtonElement\n) {\n  const startParam = getStartPosition(mazeMap);\n  const stepParam = getStartParams();\n  const isEscaped = false;\n  let everyStepParam: StepParamType = {\n    ...startParam,\n    ...stepParam,\n    isEscaped,\n  };\n  while (!everyStepParam.isEscaped) {\n    everyStepParam = makeOneStep(mazeMap, everyStepParam);\n    const curStepMazeMarkup = getMazeMarkup(mazeMap);\n    if (mazeContainer) mazeContainer.innerHTML = curStepMazeMarkup;\n  }\n  if (everyStepParam.isEscaped) {\n    const { crossingsParamArray } = everyStepParam;\n    const startMazeMap = window.structuredClone(mazeMap);\n    drawShortWay(\n      crossingsParamArray,\n      mazeContainer,\n      startMazeMap,\n      generateNewMazeButton\n    );\n  }\n}\n","import { CoordType, DirectionType, MapType } from \"../../types\";\n\nexport function getStartPosition(mazeMap: MapType) {\n  const startVariants = [\"<\", \"^\", \">\", \"v\"];\n  let startPosition: CoordType = [0, 0];\n  let startDirection = \"\" as DirectionType;\n  for (let y = 0; y < mazeMap.length; y++) {\n    for (let x = 0; x < mazeMap[y].length; x++) {\n      if (startVariants.indexOf(mazeMap[y][x]) >= 0) {\n        startPosition = [y, x];\n        startDirection = mazeMap[y][x] as DirectionType;\n        break;\n      }\n      if (startDirection) break;\n    }\n  }\n  return {\n    startPosition,\n    startDirection,\n  };\n}\n","import { StartParamType } from \"../../types\";\n\nexport function getStartParams(): StartParamType;\n\nexport function getStartParams() {\n  return {\n    coordList: [],\n    currentWay: [],\n    listOfCrosses: [],\n    crossingsParamArray: [{ start: { way: [], from: null, coord: [] } }],\n    prev: \"start\",\n  } as StartParamType;\n}\n","import { getMazeMarkup } from \"./getMazeMarkup\";\nimport { calcShortWay } from \"./calcShortWay\";\nimport { CrossesItemType, MapType, CoordType } from \"../../types\";\n\nexport function drawShortWay(\n  crossingsParamArray: CrossesItemType[],\n  mazeEl: HTMLElement | null,\n  startMaze: MapType,\n  generateNewMazeButton: HTMLButtonElement\n) {\n  const rightWay = calcShortWay(crossingsParamArray);\n  const trueWayId = setInterval(() => {\n    if (!rightWay.length) {\n      clearInterval(trueWayId);\n      generateNewMazeButton.disabled = false;\n      return;\n    }\n    const [y, x] = rightWay.shift() as CoordType;\n    const newRow = startMaze[y].split(\"\");\n    newRow[x] = \"*\";\n    startMaze[y] = newRow.join(\"\");\n    const mazeContent = getMazeMarkup(startMaze);\n    if (mazeEl) mazeEl.innerHTML = mazeContent;\n  }, 25);\n}\n","/* eslint-disable no-loop-func */\n/* eslint-disable prefer-destructuring */\nimport { CrossesItemType } from \"../../types\";\n\nexport function calcShortWay(crossesList: CrossesItemType[]) {\n  let lastStep = crossesList.pop() as CrossesItemType;\n  let lastStepKey = Object.keys(lastStep)[0];\n  let prevStepName = lastStep[lastStepKey].from;\n  let prevStepLog = lastStep[lastStepKey].coord;\n  const resultLog = [...prevStepLog];\n  while (prevStepName) {\n    lastStep = crossesList.find((item) => {\n      if (!prevStepName) return false;\n      return item[prevStepName];\n    }) as CrossesItemType;\n    lastStepKey = Object.keys(lastStep)[0];\n    prevStepName = lastStep[lastStepKey].from;\n    prevStepLog = lastStep[lastStepKey].coord;\n    resultLog.unshift(...prevStepLog);\n  }\n  return resultLog;\n}\n"],"names":["MESSAGE_TYPES","__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","chunkId","obj","prop","prototype","hasOwnProperty","call","drawNewMaze","mazeContainer","mazeMarkup","innerHTML","getMazeParams","inputHeigth","document","getElementById","inputWidth","height","value","width","_defineProperty","configurable","writable","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","minLen","n","toString","slice","constructor","name","from","test","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","err","TypeError","insertNextDirectionInMap","string","coloumn","nextDirection","newRow","split","join","makeOneStep","mazeMap","currentStepParams","startPosition","startDirection","coordList","currentWay","listOfCrosses","prev","isEscaped","crossingsParamArray","direction","coord","resultCoord","x","y","curDirecation","check","emptyWay","checkAround","nextStep","resultLOg","curPosition","NextPosition","curDirection","doStep","concat","way","restCrosses","splice","crossing","shift","getItemClass","item","getMazeMarkup","fill","map","_","columnNumber","emptyCell","row","rowNumber","el","coloumnNumber","numbers","_toConsumableArray","iter","b","baseURI","self","location","href","widthWithBorder","skeletonMaze","startButton","generateNewMazeButton","worker","Worker","URL","onmessage","data","newMaze","type","console","log","DRAW_NEW_MAZE","drawMazeParams","disabled","DRAW_ESCAPING","startParam","startVariants","indexOf","getStartPosition","everyStepParam","start","curStepMazeMarkup","mazeEl","startMaze","rightWay","crossesList","lastStep","pop","lastStepKey","keys","prevStepName","prevStepLog","resultLog","find","unshift","calcShortWay","trueWayId","setInterval","clearInterval","mazeContent","drawShortWay","window","structuredClone","startEscaping","rowIndex","itemIndex","postMessage","mazeParams","addEventListener"],"sourceRoot":""}