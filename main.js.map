{"version":3,"file":"main.js","mappings":"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","sources":["webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://maze/./src/findExit/getMazeMarkup.ts","webpack://maze/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://maze/./src/generateMaze/getRandomBorderPosition.ts","webpack://maze/./src/generateMaze/brakeNaighborWall.ts","webpack://maze/./src/generateMaze/getEmptyNeighbor.ts","webpack://maze/./src/findExit/index.ts","webpack://maze/./src/generateMaze/mazeGenerator.ts","webpack://maze/./src/generateMaze/getNextCellCoord.ts","webpack://maze/./src/generateMaze/createMazePatternBySize.ts","webpack://maze/./src/findExit/getStartPosition.ts","webpack://maze/./src/findExit/doStep.ts","webpack://maze/./src/findExit/checkAround.ts","webpack://maze/./src/findExit/getNextStepDirection.ts","webpack://maze/./src/findExit/calcCrossCoord.ts","webpack://maze/./src/findExit/calcShortWay.ts","webpack://maze/./src/index.ts"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export function getMazeMarkup(arr: string[]) {\n  return `<div class=\"mazeContainer\">${arr\n    .map(\n      (row) =>\n        `<div class=\"mazeRow\" style=\"grid-template-columns: repeat(${\n          arr[0].length\n        },10px); \">${row\n          .split(\"\")\n          .map((el) => `<div>${el || \".\"}</div>`)\n          .join(\"\")}</div>`\n    )\n    .join(\"\")}</div>`;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export function getRandomBorderPosition(heightWithBorder: number) {\n  let position = Math.ceil(Math.random() * heightWithBorder);\n  if (position % 2 === 0) position++;\n  if (position === 0) position++;\n  if (position >= heightWithBorder) position = heightWithBorder - 2;\n  return position;\n}\n","export function brakeNaighborWall(\n  arr: string[][],\n  curCell: [number, number],\n  nextCell: [number, number]\n) {\n  const [y, x] = curCell;\n  if (curCell[0] > nextCell[0] && arr[y - 1]) {\n    arr[y - 1][x] = \" \";\n  }\n  if (curCell[0] < nextCell[0] && arr[y + 1]) {\n    arr[y + 1][x] = \" \";\n  }\n  if (curCell[1] > nextCell[1] && arr[y][x - 1]) {\n    arr[y][x - 1] = \" \";\n  }\n  if (curCell[1] < nextCell[1] && arr[y][x + 1]) {\n    arr[y][x + 1] = \" \";\n  }\n  return arr;\n}\n","export function getEmptyNeighbor(arr: string[][], curCell: [number, number]) {\n  const [y, x] = curCell;\n  const result: [number, number][] = [];\n  if (\n    arr[y + 2] &&\n    arr[y + 2][x] === \" \" &&\n    y + 2 !== arr.length - 1 &&\n    y + 2 !== 0\n  ) {\n    result.push([y + 2, x]);\n  }\n  if (\n    arr[y - 2] &&\n    arr[y - 2][x] === \" \" &&\n    y - 2 !== arr.length - 1 &&\n    y - 2 !== 0\n  ) {\n    result.push([y - 2, x]);\n  }\n  if (\n    arr[y][x + 2] &&\n    arr[y][x + 2] === \" \" &&\n    x + 2 !== arr[y].length - 1 &&\n    x + 2 !== 0\n  ) {\n    result.push([y, x + 2]);\n  }\n  if (\n    arr[y][x - 2] &&\n    arr[y][x - 2] === \" \" &&\n    x - 2 !== arr[y].length - 1 &&\n    x - 2 !== 0\n  ) {\n    result.push([y, x - 2]);\n  }\n  return result;\n}\n","import { getStartPosition } from \"./getStartPosition\";\nimport { doStep } from \"./doStep\";\nimport { getMazeMarkup } from \"./getMazeMarkup\";\nimport { calcCrossCoord } from \"./calcCrossCoord\";\nimport { calcShortWay } from \"./calcShortWay\";\nimport { createMazePatternBySize } from \"../generateMaze/createMazePatternBySize\";\nimport { mazeGenerator } from \"../generateMaze/mazeGenerator\";\n\nexport type CrossesItemType = {\n  [key: string]: {\n    way: string[];\n    from: null | string;\n    coord: [number, number][];\n  };\n};\n\nexport function startNewMazeEscaping(hight: number, weight: number) {\n  let intId: NodeJS.Timer;\n  const startMaze = mazeGenerator(createMazePatternBySize(hight, weight));\n  const arr = startMaze.slice();\n  let startPosition: [number, number] = [0, 0];\n  let startDirection = \"\";\n  let coordList: [number, number][] = [];\n  let currentWay: string[] = [];\n  let listOfCrosses: [number, number][] = [];\n  const crossingsParamArray: CrossesItemType[] = [\n    { start: { way: [], from: null, coord: [] } },\n  ];\n  let prev = \"start\";\n  const mazeEl = document.getElementById(\"maze\");\n  const curWay = document.getElementById(\"curWay\");\n  let mazeContent = getMazeMarkup(arr);\n  if (mazeEl) mazeEl.innerHTML = mazeContent;\n\n  const startParam = getStartPosition(arr);\n  startPosition = startParam.startPosition;\n  startDirection = startParam.startDirection;\n\n  function makeOneStep() {\n    const { nextStep, nextDirection, resultLOg } = doStep(\n      arr,\n      startDirection,\n      startPosition[0],\n      startPosition[1]\n    );\n    if (\n      startPosition[1] === arr[0].length - 1 ||\n      startPosition[0] === arr.length - 1 ||\n      startPosition[0] === 0 ||\n      startPosition[1] === 0\n    ) {\n      console.log(\"here!!!\");\n      currentWay = currentWay.concat(resultLOg);\n      coordList.push([startPosition[0], startPosition[1]]);\n      crossingsParamArray.push({\n        [startPosition.toString()]: {\n          way: currentWay,\n          from: prev,\n          coord: coordList,\n        },\n      });\n\n      clearInterval(intId);\n      const rightWay = calcShortWay(crossingsParamArray);\n      const trueWayId = setInterval(() => {\n        if (!rightWay.length) {\n          clearInterval(trueWayId);\n          return;\n        }\n        const [y, x] = rightWay.shift() as [number, number];\n        const newRow = startMaze[y].split(\"\");\n        newRow[x] = \"*\";\n        startMaze[y] = newRow.join(\"\");\n        mazeContent = getMazeMarkup(startMaze);\n        if (mazeEl) mazeEl.innerHTML = mazeContent;\n      }, 50);\n      return;\n    }\n    if (nextStep.length > 1 && typeof nextStep !== \"string\") {\n      coordList.push([startPosition[0], startPosition[1]]);\n      const restCrosses = nextStep.splice(1, nextStep.length - 1);\n      listOfCrosses = listOfCrosses.concat(restCrosses);\n      crossingsParamArray.push({\n        [startPosition.toString()]: {\n          way: currentWay,\n          from: prev,\n          coord: coordList,\n        },\n      });\n      currentWay = [];\n      coordList = [];\n      prev = startPosition.toString();\n    }\n    currentWay = currentWay.concat(resultLOg);\n\n    if (nextStep.length) {\n      coordList.push([startPosition[0], startPosition[1]]);\n      startPosition = nextStep[0] as [number, number];\n      startDirection = nextDirection;\n    } else {\n      const crossing = listOfCrosses.shift();\n      coordList = [];\n      if (crossing) {\n        startPosition = crossing;\n        startDirection = arr[crossing[0]][crossing[1]];\n        prev = calcCrossCoord(startDirection, startPosition).toString();\n      }\n      currentWay = [startDirection];\n    }\n    mazeContent = getMazeMarkup(arr);\n    if (mazeEl) mazeEl.innerHTML = mazeContent;\n    if (curWay) curWay.innerHTML = `<div>${coordList.join(\" \")}</div>`;\n  }\n\n  const nextStepButton = document.getElementById(\n    \"nextStepButton\"\n  ) as HTMLButtonElement;\n  nextStepButton.addEventListener(\"click\", () => {\n    nextStepButton.disabled = true;\n    intId = setInterval(() => {\n      makeOneStep();\n    }, 50);\n    nextStepButton.disabled = false;\n  });\n}\n","import { brakeNaighborWall } from \"./brakeNaighborWall\";\nimport { getNextCellCoord } from \"./getNextCellCoord\";\nimport { getEmptyNeighbor } from \"./getEmptyNeighbor\";\nimport { getRandomBorderPosition } from \"./getRandomBorderPosition\";\n\nexport function mazeGenerator(arr: string[][]) {\n  const startCell: [number, number] = [1, 1];\n  let curCell = startCell;\n  const cellsWithEmptyNeighborStack = [startCell];\n\n  while (cellsWithEmptyNeighborStack.length) {\n    arr[curCell[0]][curCell[1]] = \"*\";\n    const emptyNeighbors = getEmptyNeighbor(arr, curCell);\n    if (emptyNeighbors.length === 0) {\n      curCell = cellsWithEmptyNeighborStack.shift() as [number, number];\n      // eslint-disable-next-line no-continue\n      continue;\n    } else if (emptyNeighbors.length > 1) {\n      cellsWithEmptyNeighborStack.push(curCell);\n    }\n\n    const nextCell = getNextCellCoord(emptyNeighbors);\n    brakeNaighborWall(arr, curCell, nextCell);\n    curCell = nextCell;\n  }\n  const start = getRandomBorderPosition(arr.length);\n  arr[start][1] = \">\";\n  const resultArr = arr.map((el) => el.join(\"\").replaceAll(\"*\", \" \"));\n  return resultArr;\n}\n","export function getNextCellCoord(variants: [number, number][]) {\n  const variantsLength = variants.length;\n  const rndmVariants = Math.floor(Math.random() * variantsLength);\n  return variants[rndmVariants];\n}\n","import { getRandomBorderPosition } from \"./getRandomBorderPosition\";\n\nexport function createMazePatternBySize(width: number, height: number) {\n  const widthWithBorder = width * 2 + 1;\n  const heightWithBorder = height * 2 + 1;\n  let rowsArray = Array(heightWithBorder).fill(\"\");\n\n  const end = getRandomBorderPosition(heightWithBorder);\n  rowsArray = rowsArray.map((_, i, arr) => {\n    if (i === 0 || i === arr.length - 1 || i % 2 === 0)\n      return Array(widthWithBorder).fill(\"#\");\n\n    return Array(widthWithBorder)\n      .fill(\" \")\n      .map((col, index, arrCol) => {\n        if (i === end && index === widthWithBorder - 1) return \" \";\n        if (index % 2 === 0 || index === 0 || index === arrCol.length - 1)\n          return \"#\";\n        return `${col}`;\n      });\n  });\n  return rowsArray;\n}\n","export function getStartPosition(arr: string[]) {\n  let startX = 0;\n  let startY = 0;\n  const startVariants = [\"<\", \"^\", \">\", \"v\"];\n  let startDirection = \"\";\n  for (let y = 0; y < arr.length; y++) {\n    for (let x = 0; x < arr[y].length; x++) {\n      if (startVariants.indexOf(arr[y][x]) >= 0) {\n        startX = x;\n        startY = y;\n        startDirection = arr[y][x];\n        break;\n      }\n      if (startDirection) break;\n    }\n  }\n\n  return {\n    startPosition: [startY, startX] as [number, number],\n    startDirection,\n  };\n}\n","import { checkAround } from \"./checkAround\";\nimport { getNextStepDirection } from \"./getNextStepDirection\";\n\nexport function doStep(\n  arr: string[],\n  curDirecation: string,\n  y: number,\n  x: number\n) {\n  const check = checkAround(y, x, arr);\n  if (!check.length)\n    return {\n      nextStep: [],\n      nextDirection: \"\",\n      resultLOg: [],\n    };\n  const [nextY, nextX] = check[0];\n  const { nextDirection, resultLOg } = getNextStepDirection(\n    [y, x],\n    [nextY, nextX],\n    curDirecation\n  );\n  return {\n    nextStep: check,\n    nextDirection,\n    resultLOg,\n  };\n}\n","export function checkAround(y: number, x: number, arr: string[]) {\n  function splitter(string: number, coloumn: number, nextDirection: string) {\n    const newRow = arr[string].split(\"\");\n    newRow[coloumn] = nextDirection;\n    arr[string] = newRow.join(\"\");\n  }\n\n  const emptyWay: [number, number][] = [];\n\n  if (arr[y + 1] && arr[y + 1][x] === \" \") {\n    emptyWay.push([y + 1, x]);\n    splitter(y + 1, x, \"v\");\n  }\n  if (arr[y - 1] && arr[y - 1][x] === \" \") {\n    emptyWay.push([y - 1, x]);\n    splitter(y - 1, x, \"^\");\n  }\n  if (arr[y][x + 1] === \" \") {\n    emptyWay.push([y, x + 1]);\n    splitter(y, x + 1, \">\");\n  }\n  if (arr[y][x - 1] === \" \") {\n    emptyWay.push([y, x - 1]);\n    splitter(y, x - 1, \"<\");\n  }\n  return emptyWay;\n}\n","export function getNextStepDirection(\n  curPosition: [number, number],\n  NextPosition: [number, number],\n  curDirection: string\n) {\n  const resultLOg: string[] = [];\n  let nextDirection = \"\";\n  if (curPosition[0] > NextPosition[0]) nextDirection = \"^\"; // top\n  if (curPosition[0] < NextPosition[0]) nextDirection = \"v\"; // bottom\n  if (curPosition[1] > NextPosition[1]) nextDirection = \"<\"; // left\n  if (curPosition[1] < NextPosition[1]) nextDirection = \">\"; // right\n\n  if (curDirection === nextDirection) resultLOg.push(\"F\");\n  else if (curDirection === \">\") {\n    if (nextDirection === \"<\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"^\") resultLOg.push(\"L\", \"F\");\n    if (nextDirection === \"v\") resultLOg.push(\"R\", \"F\");\n  } else if (curDirection === \"<\") {\n    if (nextDirection === \">\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"v\") resultLOg.push(\"L\", \"F\");\n    if (nextDirection === \"^\") resultLOg.push(\"R\", \"F\");\n  } else if (curDirection === \"v\") {\n    if (nextDirection === \"^\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"<\") resultLOg.push(\"R\", \"F\");\n    if (nextDirection === \">\") resultLOg.push(\"L\", \"F\");\n  } else if (curDirection === \"^\") {\n    if (nextDirection === \"v\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \">\") resultLOg.push(\"R\", \"F\");\n    if (nextDirection === \"<\") resultLOg.push(\"L\", \"F\");\n  }\n  return { nextDirection, resultLOg };\n}\n","export function calcCrossCoord(direction: string, coord: [number, number]) {\n  let resultCoord: [number, number][] = [];\n  const x = coord[1];\n  const y = coord[0];\n  if (direction === \">\") {\n    resultCoord = resultCoord.concat([y, x - 1]);\n  }\n  if (direction === \"<\") {\n    resultCoord = resultCoord.concat([y, x + 1]);\n  }\n  if (direction === \"^\") {\n    resultCoord = resultCoord.concat([y + 1, x]);\n  }\n  if (direction === \"v\") {\n    resultCoord = resultCoord.concat([y - 1, x]);\n  }\n  return resultCoord;\n}\n","/* eslint-disable no-loop-func */\n/* eslint-disable prefer-destructuring */\nimport { CrossesItemType } from \"./index\";\n\nexport function calcShortWay(crossesList: CrossesItemType[]) {\n  let lastStep = crossesList.pop() as CrossesItemType;\n  let lastStepKey = Object.keys(lastStep)[0];\n  let prevStepName = lastStep[lastStepKey].from;\n  let prevStepLog = lastStep[lastStepKey].coord;\n  const resultLog = [...prevStepLog];\n  while (prevStepName) {\n    lastStep = crossesList.find(\n      (item) => item[prevStepName!]\n    ) as CrossesItemType;\n    lastStepKey = Object.keys(lastStep)[0];\n    prevStepName = lastStep[lastStepKey].from;\n    prevStepLog = lastStep[lastStepKey].coord;\n    resultLog.unshift(...prevStepLog);\n  }\n  return resultLog;\n}\n","import { startNewMazeEscaping } from \"./findExit\";\nimport \"./style.css\";\n\nconst inputHeigth = <HTMLInputElement>document.getElementById(\"heigth\");\nconst inputWidth = <HTMLInputElement>document.getElementById(\"width\");\nconst generateNewMaze = <HTMLButtonElement>(\n  document.getElementById(\"generateNewMaze\")\n);\nconst currenSize = <HTMLDivElement>document.getElementById(\"currenSize\");\n\nlet height = +inputHeigth.value;\nlet width = +inputWidth.value;\ncurrenSize.innerHTML = `height: ${height} x width: ${width}`;\nstartNewMazeEscaping(height, width);\n\nfunction changeSize() {\n  height = +inputHeigth.value;\n  width = +inputWidth.value;\n  startNewMazeEscaping(height, width);\n  currenSize.innerHTML = `height: ${height} x width: ${width}`;\n}\n\ngenerateNewMaze.addEventListener(\"click\", changeSize);\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","value","err","TypeError","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","getMazeMarkup","map","row","split","el","join","_toConsumableArray","iter","getRandomBorderPosition","heightWithBorder","position","Math","ceil","random","brakeNaighborWall","curCell","nextCell","y","x","getEmptyNeighbor","result","startNewMazeEscaping","hight","weight","intId","startMaze","variants","variantsLength","startCell","cellsWithEmptyNeighborStack","emptyNeighbors","floor","shift","replaceAll","mazeGenerator","width","height","widthWithBorder","rowsArray","fill","end","_","col","index","arrCol","createMazePatternBySize","startPosition","startDirection","coordList","currentWay","listOfCrosses","crossingsParamArray","start","way","coord","prev","mazeEl","document","getElementById","curWay","mazeContent","innerHTML","startParam","startX","startY","startVariants","indexOf","getStartPosition","nextStepButton","addEventListener","disabled","setInterval","curDirecation","check","splitter","string","coloumn","nextDirection","newRow","emptyWay","checkAround","nextStep","resultLOg","curPosition","NextPosition","curDirection","getNextStepDirection","doStep","restCrosses","splice","concat","crossing","direction","resultCoord","console","log","clearInterval","rightWay","crossesList","lastStep","pop","lastStepKey","keys","prevStepName","prevStepLog","resultLog","find","item","unshift","calcShortWay","trueWayId","makeOneStep","inputHeigth","inputWidth","generateNewMaze","currenSize"],"sourceRoot":""}