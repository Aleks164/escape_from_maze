{"version":3,"file":"main.js","mappings":"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","sources":["webpack://maze/./src/app/constants.ts","webpack://maze/webpack/bootstrap","webpack://maze/./src/app/getMazeParams.ts","webpack://maze/./src/app/drawNewMaze.ts","webpack://maze/./src/app/findExit/getItemClass.ts","webpack://maze/./src/app/findExit/getMazeMarkup.ts","webpack://maze/./src/app/drawSkeleton.ts","webpack://maze/./src/app/getSkeletonMaze.ts","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://maze/./src/app/findExit/drawShortWay.ts","webpack://maze/./src/app/findExit/calcShortWay.ts","webpack://maze/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://maze/webpack/runtime/get javascript chunk filename","webpack://maze/webpack/runtime/hasOwnProperty shorthand","webpack://maze/webpack/runtime/publicPath","webpack://maze/webpack/runtime/jsonp chunk loading","webpack://maze/./src/index.ts","webpack://maze/./src/app/onMessageReducer.ts","webpack://maze/./src/app/drawMazeParams.ts"],"sourcesContent":["export enum MESSAGE_TYPES {\n  DRAW_ESCAPING = \"drawEscaping\",\n  DRAW_NEW_MAZE = \"drawNewMaze\",\n}\n","// The require scope\nvar __webpack_require__ = {};\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","export function getMazeParams() {\n  const inputHeigth = <HTMLInputElement>document.getElementById(\"heigth\");\n  const inputWidth = <HTMLInputElement>document.getElementById(\"width\");\n\n  const height = +inputHeigth.value;\n  const width = +inputWidth.value;\n  return { height, width };\n}\n","export function drawNewMaze(mazeContainer: HTMLDivElement, mazeMarkup: string) {\n  if (mazeContainer) mazeContainer.innerHTML = mazeMarkup;\n}\n","export function getItemClass(item: string) {\n  switch (item) {\n    case \"#\": {\n      return \"wall\";\n    }\n    case \"*\": {\n      return \"shortWayColor\";\n    }\n    case \">\":\n    case \"<\":\n    case \"v\":\n    case \"^\": {\n      return \"steps\";\n    }\n    case \"horizontal\": {\n      return \"horizontal\";\n    }\n    case \"vertical\": {\n      return \"vertical\";\n    }\n    default:\n      return \"empty\";\n  }\n}\n","import { getItemClass } from \"./getItemClass\";\n\nexport function getMazeMarkup(arr: string[]) {\n  return `<div class=\"mazeRow\"><div class=\"mazeRow\" style=\"grid-template-columns: repeat(${\n    arr[0].length + 1\n  },15px); \">\n  ${Array(arr[0].length)\n    .fill(0)\n    .map((_, columnNumber) => {\n      let emptyCell = \"\";\n      if (columnNumber === 0) emptyCell = \"<div> </div>\";\n      return `${emptyCell}<div  class=${getItemClass(\"vertical\")}>${\n        columnNumber + 1\n      }</div>`;\n    })\n    .join(\"\")}</div>\n  ${arr\n    .map(\n      (row, rowNumber) =>\n        `<div class=\"mazeRow\" style=\"grid-template-columns: repeat(${\n          arr[0].length + 1\n        },15px); \">${row\n          .split(\"\")\n          .map((el, coloumnNumber) => {\n            let numbers = \"\";\n            if (coloumnNumber === 0)\n              numbers = `<div class=${getItemClass(\"horizontal\")}>${\n                rowNumber + 1\n              }</div>`;\n            return `${numbers}<div class=${getItemClass(el)}>${\n              el || \".\"\n            }</div>`;\n          })\n          .join(\"\")}</div>`\n    )\n    .join(\"\")}</div>`;\n}\n","import { drawNewMaze } from \"./drawNewMaze\";\nimport { getMazeMarkup } from \"./findExit/getMazeMarkup\";\nimport { getMazeParams } from \"./getMazeParams\";\nimport { getSkeletonMaze } from \"./getSkeletonMaze\";\n\nexport function drawSkeleton() {\n  const mazeContainer = <HTMLDivElement>document.getElementById(\"maze\");\n  const { height, width } = getMazeParams();\n\n  const skeletonMaze = getSkeletonMaze(height, width);\n\n  drawNewMaze(mazeContainer, getMazeMarkup(skeletonMaze));\n}\n","export function getSkeletonMaze(width: number, height: number) {\n  const widthWithBorder = width * 2 + 1;\n  const heightWithBorder = height * 2 + 1;\n  return Array(heightWithBorder)\n    .fill(\"\")\n    .map((row, rowIndex) =>\n      Array(widthWithBorder)\n        .fill(\" \")\n        .map((item, itemIndex) => {\n          if (\n            (itemIndex % 2 !== 0 && rowIndex % 2 !== 0) ||\n            (itemIndex % 2 === 0 && rowIndex % 2 === 0)\n          )\n            return \"#\";\n          return \" \";\n        })\n        .join(\"\")\n    );\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { getMazeMarkup } from \"./getMazeMarkup\";\nimport { calcShortWay } from \"./calcShortWay\";\nimport { CrossesItemType, MapType, CoordType } from \"../../types\";\n\nexport function drawShortWay(\n  crossingsParamArray: CrossesItemType[],\n  mazeEl: HTMLElement | null,\n  startMaze: MapType,\n  generateNewMazeButton: HTMLButtonElement\n) {\n  const rightWay = calcShortWay(crossingsParamArray);\n  const trueWayId = setInterval(() => {\n    if (!rightWay.length) {\n      clearInterval(trueWayId);\n      generateNewMazeButton.disabled = false;\n      return;\n    }\n    const [y, x] = rightWay.shift() as CoordType;\n    const newRow = startMaze[y].split(\"\");\n    newRow[x] = \"*\";\n    startMaze[y] = newRow.join(\"\");\n    const mazeContent = getMazeMarkup(startMaze);\n    if (mazeEl) mazeEl.innerHTML = mazeContent;\n  }, 25);\n}\n","/* eslint-disable no-loop-func */\n/* eslint-disable prefer-destructuring */\nimport { CrossesItemType } from \"../../types\";\n\nexport function calcShortWay(crossesList: CrossesItemType[]) {\n  let lastStep = crossesList.pop() as CrossesItemType;\n  let lastStepKey = Object.keys(lastStep)[0];\n  let prevStepName = lastStep[lastStepKey].from;\n  let prevStepLog = lastStep[lastStepKey].coord;\n  const resultLog = [...prevStepLog];\n  while (prevStepName) {\n    lastStep = crossesList.find((item) => {\n      if (!prevStepName) return false;\n      return item[prevStepName];\n    }) as CrossesItemType;\n    lastStepKey = Object.keys(lastStep)[0];\n    prevStepName = lastStep[lastStepKey].from;\n    prevStepLog = lastStep[lastStepKey].coord;\n    resultLog.unshift(...prevStepLog);\n  }\n  return resultLog;\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/task-calendar/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","import { getMazeParams } from \"./app/getMazeParams\";\nimport { drawSkeleton } from \"./app/drawSkeleton\";\nimport { MESSAGE_TYPES } from \"./app/constants\";\nimport { OnGetMessageParamsType } from \"./types\";\nimport { onMessageReducer } from \"./app/onMessageReducer\";\nimport \"./style.css\";\n\nconst startButton = <HTMLButtonElement>document.getElementById(\"start\");\nconst generateNewMazeButton = <HTMLButtonElement>(\n  document.getElementById(\"generateNewMaze\")\n);\nconst mazeContainer = <HTMLDivElement>document.getElementById(\"maze\");\nconst worker = new Worker(new URL(\"./mazeGeneratorWW.ts\", import.meta.url));\nlet key = Date.now().toString();\n\nworker.onmessage = (message: OnGetMessageParamsType) =>\n  onMessageReducer(message, mazeContainer, generateNewMazeButton, startButton);\n\ndrawSkeleton();\n\nworker.postMessage({\n  mazeParams: getMazeParams(),\n  type: MESSAGE_TYPES.DRAW_NEW_MAZE,\n  key,\n});\n\ngenerateNewMazeButton.addEventListener(\"click\", () => {\n  key = Date.now().toString();\n  drawSkeleton();\n  worker.postMessage({\n    mazeParams: getMazeParams(),\n    type: MESSAGE_TYPES.DRAW_NEW_MAZE,\n    key,\n  });\n});\n\nstartButton.addEventListener(\"click\", () => {\n  startButton.disabled = true;\n  generateNewMazeButton.disabled = true;\n  drawSkeleton();\n  worker.postMessage({ type: MESSAGE_TYPES.DRAW_ESCAPING, key });\n});\n","import { MESSAGE_TYPES } from \"./constants\";\nimport { drawMazeParams } from \"./drawMazeParams\";\nimport { drawNewMaze } from \"./drawNewMaze\";\nimport { drawShortWay } from \"./findExit/drawShortWay\";\nimport { getMazeParams } from \"./getMazeParams\";\nimport { OnGetMessageParamsType } from \"../types\";\n\nexport function onMessageReducer(\n  {\n    data: { newMaze, mazeMarkup, crossingsParamArray, type },\n  }: OnGetMessageParamsType,\n  mazeContainer: HTMLDivElement,\n  generateNewMazeButton: HTMLButtonElement,\n  startButton: HTMLButtonElement\n) {\n  switch (type) {\n    case MESSAGE_TYPES.DRAW_NEW_MAZE: {\n      const { height, width } = getMazeParams();\n      drawMazeParams(height, width);\n      drawNewMaze(mazeContainer, mazeMarkup);\n      startButton.disabled = false;\n      break;\n    }\n    case MESSAGE_TYPES.DRAW_ESCAPING: {\n      const startMazeMap = window.structuredClone(newMaze);\n      drawShortWay(\n        crossingsParamArray,\n        mazeContainer,\n        startMazeMap,\n        generateNewMazeButton\n      );\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n}\n","export function drawMazeParams(height: number, width: number) {\n  const currenSizeButton = <HTMLDivElement>(\n    document.getElementById(\"currenSize\")\n  );\n\n  currenSizeButton.innerHTML = `height: ${height} x width: ${width}`;\n}\n"],"names":["MESSAGE_TYPES","__webpack_require__","getMazeParams","inputHeigth","document","getElementById","inputWidth","height","value","width","drawNewMaze","mazeContainer","mazeMarkup","innerHTML","getItemClass","item","getMazeMarkup","arr","length","Array","fill","map","_","columnNumber","emptyCell","join","row","rowNumber","split","el","coloumnNumber","numbers","drawSkeleton","widthWithBorder","rowIndex","itemIndex","_arrayLikeToArray","len","i","arr2","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_toConsumableArray","isArray","iter","Symbol","iterator","TypeError","drawShortWay","crossingsParamArray","mazeEl","startMaze","generateNewMazeButton","rightWay","crossesList","lastStep","pop","lastStepKey","keys","prevStepName","prevStepLog","coord","resultLog","find","unshift","calcShortWay","trueWayId","setInterval","clearInterval","disabled","shift","_i","_s","_e","_arr","_n","_d","next","done","push","err","y","x","newRow","mazeContent","m","u","chunkId","obj","prop","hasOwnProperty","p","b","baseURI","self","location","href","startButton","worker","Worker","URL","key","Date","now","onmessage","message","data","newMaze","type","DRAW_NEW_MAZE","DRAW_ESCAPING","window","structuredClone","onMessageReducer","postMessage","mazeParams","addEventListener"],"sourceRoot":""}