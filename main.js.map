{"version":3,"file":"main.js","mappings":"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","sources":["webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://maze/./src/findExit/checkAround.ts","webpack://maze/./src/findExit/getMazeMarkup.ts","webpack://maze/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://maze/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://maze/./src/generateMaze/getRandomBorderPosition.ts","webpack://maze/./src/generateMaze/breakNaighborWall.ts","webpack://maze/./src/generateMaze/getEmptyNeighbor.ts","webpack://maze/./src/findExit/index.ts","webpack://maze/./src/generateMaze/mazeGenerator.ts","webpack://maze/./src/generateMaze/getNextCellCoord.ts","webpack://maze/./src/generateMaze/createMazePatternBySize.ts","webpack://maze/./src/findExit/getStartPosition.ts","webpack://maze/./src/findExit/calcCrossCoord.ts","webpack://maze/./src/findExit/doStep.ts","webpack://maze/./src/findExit/getNextStepDirection.ts","webpack://maze/./src/findExit/calcShortWay.ts","webpack://maze/./src/index.ts"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export function checkAround(y: number, x: number, arr: string[]) {\n  const emptyWay: [number, number][] = [];\n\n  if (arr[y + 1] && arr[y + 1][x] === \" \") {\n    emptyWay.push([y + 1, x]);\n    splitter(y + 1, x, \"v\", arr);\n  }\n  if (arr[y - 1] && arr[y - 1][x] === \" \") {\n    emptyWay.push([y - 1, x]);\n    splitter(y - 1, x, \"^\", arr);\n  }\n  if (arr[y][x + 1] === \" \") {\n    emptyWay.push([y, x + 1]);\n    splitter(y, x + 1, \">\", arr);\n  }\n  if (arr[y][x - 1] === \" \") {\n    emptyWay.push([y, x - 1]);\n    splitter(y, x - 1, \"<\", arr);\n  }\n  return emptyWay;\n}\n\nfunction splitter(\n  string: number,\n  coloumn: number,\n  nextDirection: string,\n  arr: string[]\n) {\n  const newRow = arr[string].split(\"\");\n  newRow[coloumn] = nextDirection;\n  arr[string] = newRow.join(\"\");\n}\n","export function getMazeMarkup(arr: string[]) {\n  return `<div class=\"mazeRow\"><div class=\"mazeRow\" style=\"grid-template-columns: repeat(${\n    arr[0].length + 1\n  },15px); \">\n  ${Array(arr[0].length)\n    .fill(0)\n    .map((_, columnNumber) => {\n      let emptyCell = \"\";\n      if (columnNumber === 0) emptyCell = \"<div> </div>\";\n      return `${emptyCell}<div  class=${getItemClass(\"vertical\")}>${\n        columnNumber + 1\n      }</div>`;\n    })\n    .join(\"\")}</div>\n  ${arr\n    .map(\n      (row, rowNumber) =>\n        `<div class=\"mazeRow\" style=\"grid-template-columns: repeat(${\n          arr[0].length + 1\n        },15px); \">${row\n          .split(\"\")\n          .map((el, coloumnNumber) => {\n            let numbers = \"\";\n            if (coloumnNumber == 0)\n              numbers = `<div class=${getItemClass(\"horizontal\")}>${\n                rowNumber + 1\n              }</div>`;\n            return `${numbers}<div class=${getItemClass(el)}>${\n              el || \".\"\n            }</div>`;\n          })\n          .join(\"\")}</div>`\n    )\n    .join(\"\")}</div>`;\n}\n\nfunction getItemClass(item: string) {\n  switch (item) {\n    case \"#\": {\n      return \"wall\";\n    }\n    case \"*\": {\n      return \"shortWayColor\";\n    }\n    case \">\":\n    case \"<\":\n    case \"v\":\n    case \"^\": {\n      return \"steps\";\n    }\n    case \"horizontal\": {\n      return \"horizontal\";\n    }\n    case \"vertical\": {\n      return \"vertical\";\n    }\n    default:\n      return \"empty\";\n  }\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export function getRandomBorderPosition(heightWithBorder: number) {\n  let position = Math.ceil(Math.random() * heightWithBorder);\n  if (position % 2 === 0) position++;\n  if (position === 0) position++;\n  if (position >= heightWithBorder) position = heightWithBorder - 2;\n  return position;\n}\n","export function brakeNaighborWall(\n  arr: string[][],\n  curCell: [number, number],\n  nextCell: [number, number]\n) {\n  const [y, x] = curCell;\n  if (curCell[0] > nextCell[0] && arr[y - 1]) {\n    arr[y - 1][x] = \" \";\n  }\n  if (curCell[0] < nextCell[0] && arr[y + 1]) {\n    arr[y + 1][x] = \" \";\n  }\n  if (curCell[1] > nextCell[1] && arr[y][x - 1]) {\n    arr[y][x - 1] = \" \";\n  }\n  if (curCell[1] < nextCell[1] && arr[y][x + 1]) {\n    arr[y][x + 1] = \" \";\n  }\n  return arr;\n}\n","export function getEmptyNeighbor(arr: string[][], curCell: [number, number]) {\n  const [y, x] = curCell;\n  const result: [number, number][] = [];\n  if (\n    arr[y + 2] &&\n    arr[y + 2][x] === \" \" &&\n    y + 2 !== arr.length - 1 &&\n    y + 2 !== 0\n  ) {\n    result.push([y + 2, x]);\n  }\n  if (\n    arr[y - 2] &&\n    arr[y - 2][x] === \" \" &&\n    y - 2 !== arr.length - 1 &&\n    y - 2 !== 0\n  ) {\n    result.push([y - 2, x]);\n  }\n  if (\n    arr[y][x + 2] &&\n    arr[y][x + 2] === \" \" &&\n    x + 2 !== arr[y].length - 1 &&\n    x + 2 !== 0\n  ) {\n    result.push([y, x + 2]);\n  }\n  if (\n    arr[y][x - 2] &&\n    arr[y][x - 2] === \" \" &&\n    x - 2 !== arr[y].length - 1 &&\n    x - 2 !== 0\n  ) {\n    result.push([y, x - 2]);\n  }\n  return result;\n}\n","import { getStartPosition } from \"./getStartPosition\";\nimport { doStep } from \"./doStep\";\nimport { getMazeMarkup } from \"./getMazeMarkup\";\nimport { calcCrossCoord } from \"./calcCrossCoord\";\nimport { calcShortWay } from \"./calcShortWay\";\nimport { createMazePatternBySize } from \"../generateMaze/createMazePatternBySize\";\nimport { mazeGenerator } from \"../generateMaze/mazeGenerator\";\n\nexport type CoordType = [number, number];\nexport type MapType = string[];\n\nexport type CrossesItemType = {\n  [key: string]: {\n    way: string[];\n    from: null | string;\n    coord: CoordType[];\n  };\n};\nlet startMaze: MapType;\nlet mazeMap: MapType;\nlet startPosition: CoordType;\nlet startDirection: string;\nlet coordList: CoordType[];\nlet currentWay: string[];\nlet listOfCrosses: CoordType[];\nlet crossingsParamArray: CrossesItemType[];\nlet prev: string;\nlet mazeContent: string;\nlet isEscaped: boolean;\nconst mazeEl = document.getElementById(\"maze\");\nresetStartParams();\n\nfunction resetStartParams() {\n  startPosition;\n  startDirection;\n  coordList = [];\n  currentWay = [];\n  listOfCrosses = [];\n  crossingsParamArray = [{ start: { way: [], from: null, coord: [] } }];\n  prev = \"start\";\n  isEscaped = false;\n}\n\nexport function startNewMazeEscaping(hight: number, weight: number) {\n  resetStartParams();\n  startMaze = mazeGenerator(createMazePatternBySize(hight, weight));\n  mazeMap = startMaze.slice();\n  mazeContent = getMazeMarkup(mazeMap);\n  if (mazeEl) mazeEl.innerHTML = mazeContent;\n\n  const startParam = getStartPosition(mazeMap);\n  startPosition = startParam.startPosition;\n  startDirection = startParam.startDirection;\n}\n\nexport function makeOneStep() {\n  if (isEscaped) return;\n  const { nextStep, nextDirection, resultLOg } = doStep(\n    mazeMap,\n    startDirection,\n    startPosition[0],\n    startPosition[1]\n  );\n  console.log(\n    nextStep[0],\n    nextStep[1],\n    coordList,\n    startPosition[0],\n    startPosition[1]\n  );\n  if (\n    startPosition[1] === mazeMap[0].length - 1 ||\n    startPosition[0] === mazeMap.length - 1 ||\n    startPosition[0] === 0 ||\n    startPosition[1] === 0\n  ) {\n    drawShortWay(resultLOg);\n    isEscaped = true;\n    return;\n  }\n  if (nextStep.length > 1 && typeof nextStep !== \"string\") {\n    coordList.push([startPosition[0], startPosition[1]]);\n    const restCrosses = nextStep.splice(1, nextStep.length - 1);\n    listOfCrosses = listOfCrosses.concat(restCrosses);\n    crossingsParamArray.push({\n      [startPosition.toString()]: {\n        way: currentWay,\n        from: prev,\n        coord: coordList,\n      },\n    });\n    currentWay = [];\n    coordList = [];\n    prev = startPosition.toString();\n  }\n  currentWay = currentWay.concat(resultLOg);\n\n  if (nextStep.length) {\n    coordList.push([startPosition[0], startPosition[1]]);\n    startPosition = nextStep[0] as CoordType;\n    startDirection = nextDirection;\n  } else {\n    const crossing = listOfCrosses.shift();\n    coordList = [];\n    if (crossing) {\n      startPosition = crossing;\n      startDirection = mazeMap[crossing[0]][crossing[1]];\n      prev = calcCrossCoord(startDirection, startPosition).toString();\n    }\n    currentWay = [startDirection];\n  }\n  mazeContent = getMazeMarkup(mazeMap);\n  if (mazeEl) mazeEl.innerHTML = mazeContent;\n}\n\nfunction drawShortWay(resultLOg: string[]) {\n  currentWay = currentWay.concat(resultLOg);\n  coordList.push([startPosition[0], startPosition[1]]);\n  crossingsParamArray.push({\n    [startPosition.toString()]: {\n      way: currentWay,\n      from: prev,\n      coord: coordList,\n    },\n  });\n  const rightWay = calcShortWay(crossingsParamArray);\n  const trueWayId = setInterval(() => {\n    console.log(trueWayId);\n\n    if (!rightWay.length) {\n      clearInterval(trueWayId);\n      return;\n    }\n    const [y, x] = rightWay.shift() as CoordType;\n    const newRow = startMaze[y].split(\"\");\n    newRow[x] = \"*\";\n    startMaze[y] = newRow.join(\"\");\n    mazeContent = getMazeMarkup(startMaze);\n    if (mazeEl) mazeEl.innerHTML = mazeContent;\n  }, 25);\n}\n\nconst nextStepButton = <HTMLButtonElement>(\n  document.getElementById(\"nextStepButton\")\n);\nnextStepButton.addEventListener(\"click\", () => {\n  nextStepButton.disabled = true;\n\n  while (!isEscaped) {\n    makeOneStep();\n  }\n  nextStepButton.disabled = false;\n});\n","import { brakeNaighborWall } from \"./breakNaighborWall\";\nimport { getNextCellCoord } from \"./getNextCellCoord\";\nimport { getEmptyNeighbor } from \"./getEmptyNeighbor\";\nimport { getRandomBorderPosition } from \"./getRandomBorderPosition\";\n\nexport function mazeGenerator(arr: string[][]) {\n  const startCell: [number, number] = [1, 1];\n  let curCell = startCell;\n  const cellsWithEmptyNeighborStack = [startCell];\n\n  while (cellsWithEmptyNeighborStack.length) {\n    arr[curCell[0]][curCell[1]] = \"*\";\n    const emptyNeighbors = getEmptyNeighbor(arr, curCell);\n    if (emptyNeighbors.length === 0) {\n      curCell = cellsWithEmptyNeighborStack.shift() as [number, number];\n      // eslint-disable-next-line no-continue\n      continue;\n    } else if (emptyNeighbors.length > 1) {\n      cellsWithEmptyNeighborStack.push(curCell);\n    }\n\n    const nextCell = getNextCellCoord(emptyNeighbors);\n    brakeNaighborWall(arr, curCell, nextCell);\n    curCell = nextCell;\n  }\n  const start = getRandomBorderPosition(arr.length);\n  arr[start][1] = \">\";\n  const resultArr = arr.map((el) => el.join(\"\").replaceAll(\"*\", \" \"));\n  return resultArr;\n}\n","export function getNextCellCoord(variants: [number, number][]) {\n  const variantsLength = variants.length;\n  const rndmVariants = Math.floor(Math.random() * variantsLength);\n  return variants[rndmVariants];\n}\n","import { getRandomBorderPosition } from \"./getRandomBorderPosition\";\n\nexport function createMazePatternBySize(width: number, height: number) {\n  const widthWithBorder = width * 2 + 1;\n  const heightWithBorder = height * 2 + 1;\n  let rowsArray = Array(heightWithBorder).fill(\"\");\n\n  const end = getRandomBorderPosition(heightWithBorder);\n  rowsArray = rowsArray.map((_, i, arr) => {\n    if (i === 0 || i === arr.length - 1 || i % 2 === 0)\n      return Array(widthWithBorder).fill(\"#\");\n\n    return Array(widthWithBorder)\n      .fill(\" \")\n      .map((col, index, arrCol) => {\n        if (i === end && index === widthWithBorder - 1) return \" \";\n        if (index % 2 === 0 || index === 0 || index === arrCol.length - 1)\n          return \"#\";\n        return `${col}`;\n      });\n  });\n  return rowsArray;\n}\n","export function getStartPosition(arr: string[]) {\n  let startX = 0;\n  let startY = 0;\n  const startVariants = [\"<\", \"^\", \">\", \"v\"];\n  let startDirection = \"\";\n  for (let y = 0; y < arr.length; y++) {\n    for (let x = 0; x < arr[y].length; x++) {\n      if (startVariants.indexOf(arr[y][x]) >= 0) {\n        startX = x;\n        startY = y;\n        startDirection = arr[y][x];\n        break;\n      }\n      if (startDirection) break;\n    }\n  }\n\n  return {\n    startPosition: [startY, startX] as [number, number],\n    startDirection,\n  };\n}\n","export function calcCrossCoord(direction: string, coord: [number, number]) {\n  let resultCoord: [number, number][] = [];\n  const x = coord[1];\n  const y = coord[0];\n  if (direction === \">\") {\n    resultCoord = resultCoord.concat([y, x - 1]);\n  }\n  if (direction === \"<\") {\n    resultCoord = resultCoord.concat([y, x + 1]);\n  }\n  if (direction === \"^\") {\n    resultCoord = resultCoord.concat([y + 1, x]);\n  }\n  if (direction === \"v\") {\n    resultCoord = resultCoord.concat([y - 1, x]);\n  }\n  return resultCoord;\n}\n","import { checkAround } from \"./checkAround\";\nimport { getNextStepDirection } from \"./getNextStepDirection\";\n\nexport function doStep(\n  arr: string[],\n  curDirecation: string,\n  y: number,\n  x: number\n) {\n  const check = checkAround(y, x, arr);\n  if (!check.length)\n    return {\n      nextStep: [],\n      nextDirection: \"\",\n      resultLOg: [],\n    };\n  const [nextY, nextX] = check[0];\n  const { nextDirection, resultLOg } = getNextStepDirection(\n    [y, x],\n    [nextY, nextX],\n    curDirecation\n  );\n  return {\n    nextStep: check,\n    nextDirection,\n    resultLOg,\n  };\n}\n","export function getNextStepDirection(\n  curPosition: [number, number],\n  NextPosition: [number, number],\n  curDirection: string\n) {\n  const resultLOg: string[] = [];\n  let nextDirection = \"\";\n  if (curPosition[0] > NextPosition[0]) nextDirection = \"^\"; // top\n  if (curPosition[0] < NextPosition[0]) nextDirection = \"v\"; // bottom\n  if (curPosition[1] > NextPosition[1]) nextDirection = \"<\"; // left\n  if (curPosition[1] < NextPosition[1]) nextDirection = \">\"; // right\n\n  if (curDirection === nextDirection) resultLOg.push(\"F\");\n  else if (curDirection === \">\") {\n    if (nextDirection === \"<\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"^\") resultLOg.push(\"L\", \"F\");\n    if (nextDirection === \"v\") resultLOg.push(\"R\", \"F\");\n  } else if (curDirection === \"<\") {\n    if (nextDirection === \">\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"v\") resultLOg.push(\"L\", \"F\");\n    if (nextDirection === \"^\") resultLOg.push(\"R\", \"F\");\n  } else if (curDirection === \"v\") {\n    if (nextDirection === \"^\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \"<\") resultLOg.push(\"R\", \"F\");\n    if (nextDirection === \">\") resultLOg.push(\"L\", \"F\");\n  } else if (curDirection === \"^\") {\n    if (nextDirection === \"v\") resultLOg.push(\"B\", \"F\");\n    if (nextDirection === \">\") resultLOg.push(\"R\", \"F\");\n    if (nextDirection === \"<\") resultLOg.push(\"L\", \"F\");\n  }\n  return { nextDirection, resultLOg };\n}\n","/* eslint-disable no-loop-func */\n/* eslint-disable prefer-destructuring */\nimport { CrossesItemType } from \"./index\";\n\nexport function calcShortWay(crossesList: CrossesItemType[]) {\n  let lastStep = crossesList.pop() as CrossesItemType;\n  let lastStepKey = Object.keys(lastStep)[0];\n  let prevStepName = lastStep[lastStepKey].from;\n  let prevStepLog = lastStep[lastStepKey].coord;\n  const resultLog = [...prevStepLog];\n  while (prevStepName) {\n    lastStep = crossesList.find(\n      (item) => item[prevStepName!]\n    ) as CrossesItemType;\n    lastStepKey = Object.keys(lastStep)[0];\n    prevStepName = lastStep[lastStepKey].from;\n    prevStepLog = lastStep[lastStepKey].coord;\n    resultLog.unshift(...prevStepLog);\n  }\n  return resultLog;\n}\n","import { startNewMazeEscaping } from \"./findExit\";\nimport \"./style.css\";\n\nconst inputHeigth = <HTMLInputElement>document.getElementById(\"heigth\");\nconst inputWidth = <HTMLInputElement>document.getElementById(\"width\");\n\nconst generateNewMaze = <HTMLButtonElement>(\n  document.getElementById(\"generateNewMaze\")\n);\nconst currenSize = <HTMLDivElement>document.getElementById(\"currenSize\");\n\nlet height = +inputHeigth.value;\nlet width = +inputWidth.value;\ncurrenSize.innerHTML = `height: ${height} x width: ${width}`;\nstartNewMazeEscaping(height, width);\n\nfunction changeSize() {\n  height = +inputHeigth.value;\n  width = +inputWidth.value;\n  startNewMazeEscaping(height, width);\n  currenSize.innerHTML = `height: ${height} x width: ${width}`;\n}\n\ngenerateNewMaze.addEventListener(\"click\", changeSize);\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","value","err","TypeError","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","splitter","string","coloumn","nextDirection","newRow","split","join","getMazeMarkup","fill","map","_","columnNumber","emptyCell","getItemClass","row","rowNumber","el","coloumnNumber","numbers","item","_toConsumableArray","iter","getRandomBorderPosition","heightWithBorder","position","Math","ceil","random","brakeNaighborWall","curCell","nextCell","y","x","getEmptyNeighbor","result","startMaze","mazeMap","startPosition","startDirection","coordList","currentWay","listOfCrosses","crossingsParamArray","prev","mazeContent","isEscaped","mazeEl","document","getElementById","resetStartParams","start","way","coord","startNewMazeEscaping","hight","weight","variants","variantsLength","startCell","cellsWithEmptyNeighborStack","emptyNeighbors","floor","shift","replaceAll","mazeGenerator","width","height","widthWithBorder","rowsArray","end","col","index","arrCol","createMazePatternBySize","innerHTML","startParam","startX","startY","startVariants","indexOf","getStartPosition","makeOneStep","direction","resultCoord","curDirecation","check","emptyWay","checkAround","nextStep","resultLOg","curPosition","NextPosition","curDirection","doStep","console","log","concat","rightWay","crossesList","lastStep","pop","lastStepKey","keys","prevStepName","prevStepLog","resultLog","find","unshift","calcShortWay","trueWayId","setInterval","clearInterval","drawShortWay","restCrosses","splice","crossing","nextStepButton","addEventListener","disabled","inputHeigth","inputWidth","generateNewMaze","currenSize"],"sourceRoot":""}